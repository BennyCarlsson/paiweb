{"version":3,"sources":["firebase/superSecretConfigFile.js","firebase/firebase.js","redux/actions.js","redux/actionTypes.js","components/CustomAppBar.js","components/CustomBottomAppBar.js","utils.js","settingsConfig.js","firebase/dbFunctions.js","components/PostImageCanvasDraw.js","components/PostImageCanvases.js","components/PostImage.js","components/PostTimer.js","components/DrawIcon.js","components/Post.js","components/NoAccessToFeed.js","components/ListGroupInFeed.js","components/Feed.js","components/SentPushNotificationSnackbar.js","components/CreateGroupButton.js","components/ListGroups.js","components/CustomSideDrawer.js","components/Camera.js","components/LoginPage.js","components/PageLayout.js","serviceWorker.js","components/UpdateSnackbar.js","redux/reducers/groups.js","redux/reducers/user.js","redux/reducers/feed.js","redux/reducers/index.js","redux/store.js","App.js","pushNotifications.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseConfig","databaseUrl","firebase","initializeApp","firestore","enablePersistence","catch","err","code","console","log","db","logout","type","payload","setAllPosts","allPosts","arguments","length","undefined","withStyles","root","grow","flexGrow","avatar","margin","padding","height","width","props","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","open","Boolean","user","useSelector","state","dispatch","useDispatch","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","variant","color","IconButton","onClick","event","authenticated","currentTarget","Avatar","alt","src","data","photoURL","Icon","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","auth","signOut","theme","appBar","top","bottom","toolbar","alignItems","justifyContent","aria-label","toggleDrawer","camera","convertTimeStamp","timestamp","secondsPast","Date","getTime","parseInt","progressCalc","calc","uploadImage","file","groupIds","callBack","imagePath","uid","now","name","substr","lastIndexOf","changeImageName","storage","ref","put","cacheControl","contentType","on","snapshot","saveImageRef","batch","forEach","groupId","postRef","collection","doc","set","userPhotoURL","imgRef","FieldValue","serverTimestamp","commit","then","docRef","updateLastUserPost","error","userId","update","lastUpdate","getAllPosts","where","orderBy","limit","get","querySnapshot","posts","push","objectSpread","postId","latestTimeValidPost","latestPost","useStyles","makeStyles","canvas","left","backgroundColor","touchActionNone","touchAction","PostImageCanvasDraw","canvasDrawing","imageWrapperRef","drawEnabled","canvasRef","useRef","canvasData","pressing","lastX","lastY","count","draw","useCallback","x","y","context","current","getContext","beginPath","strokeStyle","lineWidth","lineJoin","moveTo","lineTo","stroke","closePath","resetLastPosition","useEffect","ResizeObserver","entries","resize","clearRect","observe","style","offsetWidth","offsetHeight","handleTouch","action","e","down","move","up","preventDefault","canDraw","_getPointerPos","rect","ReactDOM","findDOMNode","getBoundingClientRect","clientX","clientY","changedTouches","getPointerPos","defineProperty","concat","saveCanvasData","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onMouseOut","onTouchCancel","PostImageCanvases","canvasDrawings","key","drawCanvasDrawing","imgDiv","borderRadius","minHeight","maxHeight","maxWidth","overflow","img","boxShadow","progressWrapper","widh","display","progress","palette","main","PostImage","_useState","_useState2","imageUrl","setImageUrl","_useState3","_useState4","shouldRenderImage","setShouldRenderImage","imageRef","renderNextImages","renderImages","index","getImageUrl","path","getDownloadURL","url","getImageUrlOnRef","visibility_sensor_default","onChange","isVisible","active","umd_default","loader","CircularProgress","components_PostImageCanvases","newCanvasDrawings","assign","getCanvasDrawingsExcludingYourOwn","components_PostImageCanvasDraw","marginLeft","zIndex","innerProgress","gray","PostTimer","react","toDate","value","size","icon","right","DrawIcon","editDrawEnabled","fontSize","scrollSnapAlign","flexDirection","postWrapper","border","avatarTimeDiv","marginBottom","Post","setDrawEnabled","post","components_PostTimer","components_PostImage","components_DrawIcon","textAlign","@keyframes arrowAnimation","from","transform","to","animation","NoAccessToFeed","align","RenderMembersAvatar","group","useStyle","members","map","i","groupWrapper","listItemWrapper","leftAvatarsLine","borderTop","marginTop","rightAvatarsLine","marginRight","ListGroupInFeed","ListItem","feedWrapper","background","feedTopDiv","Feed","showFeed","setShowFeed","isLoading","setIsLoading","_useState5","_useState6","setRenderImages","feed","groups","gotLatestPost","latestValidPost","updateFeed","renderGroupSection","components_ListGroupInFeed","renderPosts","filter","components_Post","components_NoAccessToFeed","TransitionLeft","Slide","direction","SentPushNotificationSnackBar","Snackbar","autoHideDuration","showSnackBar","handleCloseSnackBar","TransitionComponent","ContentProps","aria-describedby","message","snackBarText","CreateGroupButton","Button","add","uidList","displayName","createNewGroup","getLastPostDate","sort","b","loadingText","groupButtonWrapper","timer","ListGroups","groupItem","renderMembersAvatar","onInvitePress","onPressSendNotification","link","window","location","href","navigator","clipboard","writeText","setShowSnackBar","toUid","sendPushNotification","functions","httpsCallable","val","text","List","drawerList","CustomSideDrawer","setSnackBarText","SentPushNotificationSnackbar","SwipeableDrawer","onOpen","tabIndex","role","onKeyDown","components_ListGroups","bool","components_CreateGroupButton","gutterBottom","fabButton","fabProgress","hide","inputRef","createRef","progressValue","setProgressValue","openSnackbar","setOpenSnackbar","handleClose","reason","accept","capture","handleFile","Fab","click","showUploadLoader","close","LoginPage","triedToAuth","setTriedToAuth","uiConfig","signInFlow","signInOptions","FacebookAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","setPersistence","Auth","Persistence","LOCAL","setUser","StyledFirebaseAuth_default","firebaseAuth","App","PageLayout","openSideDrawer","setOpenSideDrawer","imagePreviewUrl","setimagePreviewUrl","setLatestValidPost","_useState7","_useState8","setGotLatestPost","_useState9","_useState10","setShowUploadLoader","_useState11","_useState12","setUpdateFeed","token","FCMToken","URL","searchParams","history","pushState","arrayUnion","joinGroup","setGroups","extractGroupId","uploadImageCallback","components_CustomAppBar","components_CustomSideDrawer","components_Feed","components_LoginPage","CustomBottomAppBar","components_Camera","target","files","callback","Compressor","quality","success","result","compressImage","createObjectURL","isLocalhost","hostname","match","register","process","origin","addEventListener","swUrl","fetch","response","headers","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","UpdateSnackbar","showUpdateSnackBar","initialState","combineReducers","createStore","rootReducer","messaging","createMuiTheme","primary","secondary","typography","useNextVariants","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleServiceWorkerUpdate","setState","useServiceWorker","requestPermission","getToken","initializePush","MuiThemeProvider","CssBaseline","es","store","components_PageLayout","components_UpdateSnackbar","Component","render","src_App","document","getElementById"],"mappings":"uYAAaA,8BAAS,CACpBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,wCCAHC,EAAiB,CACrBP,OAAQD,EAAOC,OACfC,WAAYF,EAAOE,WACnBC,YAAaH,EAAOS,YACpBL,UAAWJ,EAAOI,UAClBC,cAAeL,EAAOK,cACtBC,kBAAmBN,EAAOM,kBAC1BC,MAAOP,EAAOO,OAGhBG,IAASC,cAAcH,GAEvBE,IACGE,YACAC,oBACAC,MAAM,SAASC,GACG,wBAAbA,EAAIC,KACNC,QAAQC,IAAIH,EAAIC,MAIM,kBAAbD,EAAIC,MAIbC,QAAQC,IAAIH,EAAIC,QAIPN,QAAf,EACaS,EAAKT,IAASE,YC5BdQ,EAAS,iBAAO,CAC3BC,KCRoB,SDSpBC,QAAS,KAQEC,EAAc,iBAAoB,CAC7CF,KCjBuB,YDkBvBC,QAAS,CAAEE,SAFcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAY,MEoExBG,cAbA,CACbC,KAAM,GACNC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,OAAQ,EACRC,QAAS,EACTC,OAAQ,OACRC,MAAO,SAIIR,CAxEM,SAAAS,GAAS,IACpBC,EAAYD,EAAZC,QADoBC,EAEIC,IAAMC,SAAS,MAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAErBM,EAFqBH,EAAA,GAEXI,EAFWJ,EAAA,GAGtBK,EAAOC,QAAQH,GACfI,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAClCG,EAAWC,cAcjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQT,MACtByB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUN,UAAWnB,EAAQR,MAA5D,OAGAwB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYD,MAAM,UAAUE,QAnBpC,SAAoBC,GAClBjB,EAAKkB,eAAiBrB,EAAYoB,EAAME,iBAmB/BnB,EAAKkB,cACJb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,IAAI,aACJC,IAAKtB,EAAKuB,KAAKC,SACfhB,UAAWnB,EAAQN,SAGrBsB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,wBAGJpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,GAAG,cACH/B,SAAUA,EACVgC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEdhC,KAAMA,EACNkC,QAtCV,WACEnC,EAAY,QAuCJQ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUjB,QArCpB,WACEnB,EAAY,MACZpC,EAASyE,OAAOC,UAChBhC,EAAShC,OAkCD,kBC7BGQ,cAXA,SAAAyD,GAAK,MAAK,CACvBC,OAAQ,CACNC,IAAK,OACLC,OAAQ,GAEVC,QAAS,CACPC,WAAY,SACZC,eAAgB,mBAIL/D,CA9BM,SAAAS,GAAS,IACpBC,EAAYD,EAAZC,QAER,OACEgB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,SAASI,MAAM,UAAUN,UAAWnB,EAAQgD,QAC3DhC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASH,UAAWnB,EAAQmD,QAAS3B,QAAQ,SAC3CR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACED,MAAM,UACN6B,aAAW,cACX3B,QAAS5B,EAAMwD,cAAa,IAE5BvC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,cAEDrC,EAAMyD,iDCjBFC,EAAmB,SAAAC,GAC9B,IACEC,IADQ,IAAIC,MACOC,UAAYH,EAAUG,WAAa,IACxD,OAAIF,EAAc,GACTG,SAASH,GAAe,IAE7BA,EAAc,KACTG,SAASH,EAAc,IAAM,IAElCA,GAAe,OACVG,SAASH,EAAc,MAAQ,IAEpCA,EAAc,MACT,gBADT,GAKWI,EAAe,SAAAL,GAC1B,IAAMM,EACJ,MACE,IAAIJ,MAAOC,UAAY,IAAOH,EAAUG,UAAY,KCtBtB,MDwB9B,IACJ,OAAOG,EAAO,EAAI,EAAIA,EAAO,IAAM,IAAMA,GEtB9BC,EAAc,SAACC,EAAMvD,EAAMwD,EAAUC,GAChD,IAAMC,EAAY,UAAY1D,EAAK2D,IAAM,IFwBZ,SAAAJ,GAC7B,OAAON,KAAKW,MAAQL,EAAKM,KAAKC,OAAOP,EAAKM,KAAKE,YAAY,MEzBZC,CAAgBT,GAC9C9F,EAASwG,UAAUC,IAAIR,GAClBS,IAAIZ,EAAM,CAC9Ba,aAAc,iBACdC,YAAad,EAAKnF,OAEfkG,GACH,gBACA,SAAkBC,KAIlB,SAAezG,KAGf,WACE0G,EAAad,EAAW1D,EAAMwD,EAAUC,MAKxCe,EAAe,SAACN,EAAKlE,EAAMwD,EAAUC,GACzC,IAAIgB,EAAQvG,EAAGuG,QAEfjB,EAASkB,QAAQ,SAAAC,GACf,IAAIC,EAAU1G,EAAG2G,WAAW,SAASC,MACrCL,EAAMM,IAAIH,EAAS,CACjBjB,IAAK3D,EAAK2D,IACVqB,aAAchF,EAAKwB,SACnByD,OAAQf,EACRnB,UAAWtF,EAASE,UAAUuH,WAAWC,kBACzCR,cAGJF,EACGW,SACAC,KAAK,SAASC,GACbC,EAAmBvF,EAAK2D,KAAK0B,KAAK,WAChC5B,QAGH5F,MAAM,SAAS2H,GACdxH,QAAQwH,MAAM,0BAA2BA,MAWzCD,EAAqB,SAAAE,GACzB,OAAOvH,EACJ2G,WAAW,SACXC,IAAIW,GACJC,OAAO,CAAEC,WAAYlI,EAASE,UAAUuH,WAAWC,qBAgB3CS,EAAc,SAAApC,GACzB,OAAOtF,EACJ2G,WAAW,SACXgB,MAAM,YAAa,IAAK,IAAI5C,KAAKA,KAAKW,MDjFF,QCkFpCiC,MAAM,UAAW,KAAMrC,GACvBsC,QAAQ,YAAa,QACrBC,MAAM,IACNC,MACAX,KAAK,SAAAY,GACJ,IAAIC,EAAQ,GAIZ,OAHAD,EAAcvB,QAAQ,SAAAI,GACpBoB,EAAMC,KAANzG,OAAA0G,EAAA,EAAA1G,CAAA,GAAgBoF,EAAIvD,OAApB,CAA4B8E,OAAQvB,EAAInD,QAEnCuE,KAIAI,EAAsB,SAAAb,GACjC,OAAOvH,EACJ2G,WAAW,SACXgB,MAAM,YAAa,IAAK,IAAI5C,KAAK,IAAIA,KDlGD,QCmGpC4C,MAAM,MAAO,KAAMJ,GACnBK,QAAQ,YAAa,QACrBC,MAAM,GACNC,MACAX,KAAK,SAAAY,GACJ,IAAIM,EAIJ,OAHAN,EAAcvB,QAAQ,SAAAI,GACpByB,EAAazB,EAAIvD,SAEZgF,gDCsCPC,EAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCsE,OAAQ,CACNhG,SAAU,WACV4B,IAAK,MACLqE,KAAM,IACNC,gBAAiB,aAEnBC,gBAAiB,CACfnG,SAAU,WACV4B,IAAK,MACLqE,KAAM,IACNC,gBAAiB,YACjBE,YAAa,WAIFC,EA5Ja,SAAA3H,GAC1B,IAAMC,EAAUmH,IACV7C,EAAM1D,YAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKuB,KAAKoC,MACzCqD,EAAwD5H,EAAxD4H,cAAeC,EAAyC7H,EAAzC6H,gBAAiBZ,EAAwBjH,EAAxBiH,OAAQa,EAAgB9H,EAAhB8H,YAC5CC,EAAYC,mBACZC,EAAaD,iBAAO,IACpBE,GAAW,EACXC,EAAQH,mBACRI,EAAQJ,mBACRK,EAAQ,EAENC,EAAOC,sBAAY,SAACC,EAAGC,GAC3B,IAAIC,EAAUX,EAAUY,QAAQC,WAAW,MAC3CX,EAAWU,QAAQ5B,KAAK,CAAEyB,IAAGC,MAC7BC,EAAQG,YACRH,EAAQI,YAAc,MACtBJ,EAAQK,UAAY,EACpBL,EAAQM,SAAW,QACnBN,EAAQO,OAAOd,EAAMQ,QAASP,EAAMO,SACpCD,EAAQQ,OAAOV,EAAGC,GAClBC,EAAQS,SACRT,EAAQU,YACRjB,EAAMQ,QAAUH,EAChBJ,EAAMO,QAAUF,GACf,IAEGY,EAAoBd,sBAAY,WACpCJ,EAAMQ,aAAUrJ,EAChB8I,EAAMO,aAAUrJ,GACf,IAEHgK,oBAAU,WACe,IAAIC,eAAe,SAAAC,GAiBxCC,IAfM7B,GAAiBG,EAAUY,UAC7BV,EAAWU,QAAU,GACrBU,IACctB,EAAUY,QAAQC,WAAW,MACnCc,UAAU,EAAG,EAAG3B,EAAUhI,MAAOgI,EAAUjI,QACnD8H,EAActC,QAAQ,SAAAnD,GACP,OAATA,GACF8F,EAAWU,QAAQ5B,KAAK,MACxBsC,KAEAf,EAAKnG,EAAKqG,EAAGrG,EAAKsG,QAQbkB,QAAQ9B,EAAgBc,UACtC,CAACd,EAAiBD,EAAeU,EAAMe,IAE1C,IAAMI,EAAS,WACT1B,EAAUY,UACZZ,EAAUY,QAAQiB,MAAM7J,MAAQ,OAChCgI,EAAUY,QAAQiB,MAAM9J,OAAS,OACjCiI,EAAUY,QAAQ5I,MAAQgI,EAAUY,QAAQkB,YAC5C9B,EAAUY,QAAQ7I,OAASiI,EAAUY,QAAQmB,eAoB3CC,EAAc,SAACC,EAAQC,GACvBnC,IACa,SAAXkC,GACFE,EAAKD,GAEQ,SAAXD,GACFG,EAAKF,GAEQ,OAAXD,GACFI,EAAGH,KAKHC,EAAO,SAAAD,GACX/B,GAAW,GAGPiC,EAAO,SAAAF,GAEX,GADAA,EAAEI,iBACEC,IAAW,KAAAC,EApCK,SAAAN,GACpB,IAAMO,EAAOC,IAASC,YAAY3C,EAAUY,SAASgC,wBACjDC,EAAUX,EAAEW,QACZC,EAAUZ,EAAEY,QAOhB,OALIZ,EAAEa,gBAAkBb,EAAEa,eAAezL,OAAS,IAChDuL,EAAUX,EAAEa,eAAe,GAAGF,QAC9BC,EAAUZ,EAAEa,eAAe,GAAGD,SAGzB,CACLrC,EAAGoC,EAAUJ,EAAKjD,KAClBkB,EAAGoC,EAAUL,EAAKtH,KAyBD6H,CAAcd,GAAvBzB,EADK+B,EACL/B,EAAGC,EADE8B,EACF9B,EACXH,EAAKE,EAAGC,KAIN6B,EAAU,WACd,OAAIpC,GAAYG,EAAQ,GACtBA,EAAQ,GACD,IAETA,KACO,IAGH+B,EAAK,SAAAH,GACL/B,IACFD,EAAWU,QAAQ5B,KAAK,MACxBsC,ID1EwB,SAACpB,EAAYhB,EAAQ1C,GACjDzF,EAAG2G,WAAW,SACXC,IAAIuB,GACJX,OAFHhG,OAAA0K,EAAA,EAAA1K,CAAA,qBAAA2K,OAGuB1G,GAAQ0D,ICuE3BiD,CAAejD,EAAWU,QAAS1B,EAAQ1C,IAE7C2D,GAAW,GAGb,OACEjH,EAAAC,EAAAC,cAAA,UACEC,UAAW0G,EAAc7H,EAAQwH,gBAAkBxH,EAAQqH,OAC3D6D,YAAa,SAAAlB,GAAC,OAAIF,EAAY,OAAQE,IACtCmB,aAAc,SAAAnB,GAAC,OAAIF,EAAY,OAAQE,IACvCoB,YAAa,SAAApB,GAAC,OAAIF,EAAY,OAAQE,IACtCqB,YAAa,SAAArB,GAAC,OAAIF,EAAY,OAAQE,IACtCsB,UAAW,SAAAtB,GAAC,OAAIF,EAAY,KAAME,IAClCuB,WAAY,SAAAvB,GAAC,OAAIF,EAAY,KAAME,IACnCwB,WAAY,SAAAxB,GAAC,OAAIF,EAAY,KAAME,IACnCyB,cAAe,SAAAzB,GAAC,OAAIF,EAAY,KAAME,IACtCnF,IAAKiD,KC5ELX,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCsE,OAAQ,CACNhG,SAAU,WACV4B,IAAK,MACLqE,KAAM,IACNC,gBAAiB,gBAINmE,GAvEW,SAAA3L,GAAS,IACzB4L,EAAoC5L,EAApC4L,eAAgB/D,EAAoB7H,EAApB6H,gBACpBE,EAAYC,mBACV/H,EAAUmH,KACZe,EAAQH,mBACRI,EAAQJ,mBAENM,EAAOC,sBAAY,SAACC,EAAGC,GAC3B,IAAIC,EAAUX,EAAUY,QAAQC,WAAW,MAC3CF,EAAQG,YACRH,EAAQI,YAAc,MACtBJ,EAAQK,UAAY,EACpBL,EAAQM,SAAW,QACnBN,EAAQO,OAAOd,EAAMQ,QAASP,EAAMO,SACpCD,EAAQQ,OAAOV,EAAGC,GAClBC,EAAQS,SACRT,EAAQU,YACRjB,EAAMQ,QAAUH,EAChBJ,EAAMO,QAAUF,GACf,IAEGY,EAAoBd,sBAAY,WACpCJ,EAAMQ,aAAUrJ,EAChB8I,EAAMO,aAAUrJ,GACf,IAEHgK,oBAAU,WACe,IAAIC,eAAe,SAAAC,GAiBxCC,IAhB0B,WACxB,GAAImC,GAAkB7D,EAAUY,QAAS,CACvCU,IACA,IAAIX,EAAUX,EAAUY,QAAQC,WAAW,MAE3C,IAAK,IAAMiD,KADXnD,EAAQgB,UAAU,EAAG,EAAG3B,EAAUhI,MAAOgI,EAAUjI,QACjC8L,EAChBA,EAAeC,GAAKvG,QAAQ,SAAAnD,GACb,OAATA,EACFkH,IAEAf,EAAKnG,EAAKqG,EAAGrG,EAAKsG,MAO5BqD,KAEanC,QAAQ9B,EAAgBc,UACtC,CAACd,EAAiBS,EAAMsD,EAAgBvC,IAE3C,IAAMI,EAAS,WACT1B,EAAUY,UACZZ,EAAUY,QAAQiB,MAAM7J,MAAQ,OAChCgI,EAAUY,QAAQiB,MAAM9J,OAAS,OACjCiI,EAAUY,QAAQ5I,MAAQgI,EAAUY,QAAQkB,YAC5C9B,EAAUY,QAAQ7I,OAASiI,EAAUY,QAAQmB,eAIjD,OAAO7I,EAAAC,EAAAC,cAAA,UAAQC,UAAWnB,EAAQqH,OAAQxC,IAAKiD,KCqB3CX,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrC+I,OAAQ,CACNzK,SAAU,WACV0K,aAAc,MACdC,UAAW,QACXC,UAAW,OACXC,SAAU,QACVC,SAAU,UAEZC,IAAK,CACHL,aAAc,MACdM,UACE,wGAEJC,gBAAiB,CACfC,KAAM,OACN1M,OAAQ,QACR2M,QAAS,OACTnJ,eAAgB,SAChBD,WAAY,UAEdqJ,SAAU,CACRhL,MAAOsB,EAAM2J,QAAQjL,MAAMkL,SAIhBC,GAnGG,SAAA7M,GAAS,IAAA8M,EACO1M,mBAAS,IADhB2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAClBE,EADkBD,EAAA,GACRE,EADQF,EAAA,GAAAG,EAEyB9M,oBAAS,GAFlC+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAElBE,EAFkBD,EAAA,GAECE,EAFDF,EAAA,GAGrBtF,EAAkBG,mBAChB/H,EAAUmH,KACV7C,EAAM1D,YAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKuB,KAAKoC,MAE/C+I,EAOEtN,EAPFsN,SACAC,EAMEvN,EANFuN,iBACAC,EAKExN,EALFwN,aACAC,EAIEzN,EAJFyN,MACA3F,EAGE9H,EAHF8H,YACAb,EAEEjH,EAFFiH,OACA2E,EACE5L,EADF4L,eAGFtC,oBAAU,kBAAMoE,EAAYJ,IAAW,CAACA,IAExC,IAAMI,EAAc,SAAAJ,IHoFU,SAAAK,GAC9B,GAAKA,EAEL,OADiBtP,EAASwG,UAAUC,IAAI6I,GACtBC,iBAAiB3H,KAAK,SAAA4H,GAAG,OAAIA,KGtF7CC,CAAiBR,GAAUrH,KAAK,SAAA4H,GAAG,OAAIZ,EAAYY,MAmCrD,OACE5M,EAAAC,EAAAC,cAAC4M,EAAA7M,EAAD,CAAkB8M,SAjCpB,SAAkBC,GAChBZ,EAAqBY,GACjBA,GACFV,EAAiBE,IA8BmBS,QAASd,GAC7CnM,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ8L,OAAQjH,IAAK+C,GA1BnC4F,GAASD,EAETvM,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACEnB,MAAM,OACND,OAAO,OACPoC,IAAK8K,EACL/K,IAAI,aACJb,UAAWnB,EAAQoM,IACnB+B,OACEnN,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQsM,iBACtBtL,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAkBjN,UAAWnB,EAAQyM,cAMxC,GAYHzL,EAAAC,EAAAC,cAACmN,GAAD,CACE1C,eAXkC,WACxC,GAAKA,EAAL,CACA,IAAI2C,EAAoBjO,OAAOkO,OAAO,GAAI5C,GAE1C,cADO2C,EAAkBhK,GAClBgK,GAOeE,GAChB5G,gBAAiBA,IAEnB5G,EAAAC,EAAAC,cAACuN,EAAD,CACE5G,YAAaA,EACbD,gBAAiBA,EACjBZ,OAAQA,EACRW,cAAegE,GAAkBA,EAAerH,kBC7CpD6C,GAAYC,aAAW,SAAArE,GAAK,MAAK,CACrC0J,SAAU,CACRiC,WAAY,MACZjN,MAAOsB,EAAM2J,QAAQjL,MAAMkL,KAC3BgC,OAAQ,GAEVC,cAAe,CACbvN,SAAU,WACVqN,WAAY,QACZjN,MAAOsB,EAAM2J,QAAQmC,KAAKlC,KAC1BgC,OAAQ,MAIGG,GAvCG,SAAA/O,GAChB,IAAMC,EAAUmH,KACVzD,EAAY3D,EAAM2D,UACxB,OACE1C,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACE/N,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,WACjBiC,EAAiBC,EAAUsL,WAE9BhO,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CACE3M,MAAM,UACND,QAAQ,SACRyN,MAAOlL,EAAaL,EAAUsL,UAC9B7N,UAAWnB,EAAQyM,SACnByC,KAAM,KAERlO,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CACE5M,QAAQ,SACRyN,MAAO,IACP9N,UAAWnB,EAAQ4O,cACnBM,KAAM,OCNR/H,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCoM,KAAM,CACJ9N,SAAU,WACV6B,OAAQ,QACRkM,MAAO,UAIIC,GAvBE,SAAAtP,GAAS,IAChBuP,EAAiCvP,EAAjCuP,gBAAiBzH,EAAgB9H,EAAhB8H,YACnB7H,EAAUmH,KAChB,OACEnG,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEmN,SAAS,QACTpO,UAAWnB,EAAQmP,KACnBxN,QAAS2N,EACT7N,MAAOoG,EAAc,YAAc,YAJrC,UCkCEV,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCxD,KAAM,CACJiQ,gBAAiB,QACjB5P,QAAS,MACTC,OAAQ,OACRC,MAAO,OACP0M,QAAS,OACTiD,cAAe,SACfpM,eAAgB,SAChBD,WAAY,UAEdsM,YAAa,CACXrO,SAAU,WACVvB,MAAO,OACPoM,SAAU,SAEZxM,OAAQ,CACNiQ,OAAQ,oBACRjB,WAAY,OAEdkB,cAAe,CACbvO,SAAU,WACVsN,OAAQ,EACRnC,QAAS,OACTqD,aAAc,YAIHC,GA/DF,SAAA/P,GACX,IAAMC,EAAUmH,KADI0F,EAEkB1M,oBAAS,GAF3B2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAEbhF,EAFaiF,EAAA,GAEAiD,EAFAjD,EAAA,GAGZkD,EAAgDjQ,EAAhDiQ,KAAM1C,EAA0CvN,EAA1CuN,iBAAkBC,EAAwBxN,EAAxBwN,aAAcC,EAAUzN,EAAVyN,MAM9C,OACExM,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQT,MACtByB,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ0P,aACtB1O,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ4P,eACtB5O,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEZ,UAAWnB,EAAQN,OACnBsC,IAAI,cACJC,IAAK+N,EAAKrK,eAEZ3E,EAAAC,EAAAC,cAAC+O,GAAD,CAAWvM,UAAWsM,EAAKtM,aAE7B1C,EAAAC,EAAAC,cAACgP,GAAD,CACErI,YAAaA,EACbwF,SAAU2C,EAAKpK,OACf0H,iBAAkBA,EAClBC,aAAcA,EACdC,MAAOA,EACP7B,eAAgBqE,EAAKrE,eACrB3E,OAAQgJ,EAAKhJ,SAEfhG,EAAAC,EAAAC,cAACiP,GAAD,CAAUb,gBAxBQ,WACtBS,GAAgBlI,IAuBgCA,YAAaA,OCb3DV,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCxD,KAAM,CACJK,QAAS,MACTC,OAAQ,OACR2M,QAAS,OACTiD,cAAe,SACfpM,eAAgB,eAChB+M,UAAW,SACXhN,WAAY,UAEdiN,4BAA6B,CAC3BC,KAAM,CAAEC,UAAS,iBACjBC,GAAI,CAAED,UAAS,qBAEjBpB,KAAM,CACJ9N,SAAU,WACVkO,SAAU,OACVkB,UAAW,4CAIAC,GAvCQ,WACrB,IAAM1Q,EAAUmH,KAChB,OACEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQT,MACtByB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYoP,MAAM,SAASnP,QAAQ,MAAnC,mCAEER,EAAAC,EAAAC,cAAA,WAFF,qBAKFF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMX,MAAM,WAAWN,UAAWnB,EAAQmP,KAAMI,SAAS,SAAzD,8BCGAqB,GAAsB,SAAAC,GAC1B,IAAM7Q,EAAU8Q,KAChB,OAAOD,EAAME,QAAQC,IAAI,SAACrQ,EAAMsQ,GAAP,OACvBjQ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACE6J,IAAK,MAAQqF,EACbjP,IAAK,eACLC,IAAKtB,EAAKwB,SACVhB,UAAWnB,EAAQN,YAKnBoR,GAAW1J,YAAW,SAAArE,GAAK,MAAK,CACpCmO,aAAc,CACZ1E,QAAS,OACT1M,MAAO,OACP0P,gBAAiB,SAEnB9P,OAAQ,CACNgP,WAAY,OACZiB,OAAQ,mBAEVwB,gBAAiB,CACf3E,QAAS,QAEX4E,gBAAiB,CACftR,MAAO,OACPuR,UAAW,kBACX3C,WAAY,MACZ4C,UAAW,OACXzR,OAAQ,QAEV0R,iBAAkB,CAChBzR,MAAO,OACPuR,UAAW,kBACXG,YAAa,MACbF,UAAW,OACXzR,OAAQ,WAIG4R,GAvDS,SAAA1R,GAAS,IACvB8Q,EAAU9Q,EAAV8Q,MACF7Q,EAAU8Q,KAChB,OACE9P,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQkR,cACtBlQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQoR,kBACxBpQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQmR,iBACtBnQ,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,KAAWd,GAAoBC,KAEjC7P,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQuR,qBC+ExBpK,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrC4O,YAAa,CACXnF,QAAS,OACTiD,cAAe,SACfrM,WAAY,SACZmE,gBAAiBxE,EAAM2J,QAAQkF,WAAWjF,MAE5CkF,WAAY,CACVrC,gBAAiB,UAINsC,GA/FF,SAAA/R,GAAS,IAAA8M,EACY1M,oBAAS,GADrB2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GACbkF,EADajF,EAAA,GACHkF,EADGlF,EAAA,GAAAG,EAEc9M,oBAAS,GAFvB+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAEbgF,EAFa/E,EAAA,GAEFgF,EAFEhF,EAAA,GAAAiF,EAGoBhS,mBAAS,GAH7BiS,EAAA/R,OAAAC,EAAA,EAAAD,CAAA8R,EAAA,GAGb5E,EAHa6E,EAAA,GAGCC,EAHDD,EAAA,GAIdpS,EAAUmH,KACVxG,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAClC2R,EAAO1R,YAAY,SAAAC,GAAK,OAAIA,EAAMyR,OAClCC,EAAS3R,YAAY,SAAAC,GAAK,OAAIA,EAAM0R,SACpCzR,EAAWC,cAEXuM,EAAmB,SAAA2D,GACvBoB,EAAgBpB,EAAI,IAGtB5H,oBAAU,WACR,GAAItJ,EAAMyS,eAAiBD,GAAUA,EAAOnT,OAAQ,CAClD,GAAIW,EAAM0S,gBAAiB,CACzBT,GAAY,GACZ,IAAM7N,EAAWoO,EAAOvB,IAAI,SAAAH,GAAK,OAAIA,EAAMvO,KAC3CiE,EAAYpC,GAAU6B,KAAK,SAAAa,GACzB/F,EAAS7B,EAAY4H,WAGvBmL,GAAY,GAEdE,GAAa,QAEbA,GAAa,IAEd,CAACnS,EAAM0S,gBAAiB1S,EAAMyS,cAAe1R,EAAUyR,IAI1DlJ,oBAAU,WAER,GAAItJ,EAAM2S,YAAcH,GAAUA,EAAOnT,OAAQ,CAC/C,IAAM+E,EAAWoO,EAAOvB,IAAI,SAAAH,GAAK,OAAIA,EAAMvO,KAC3CiE,EAAYpC,GAAU6B,KAAK,SAAAa,GAAK,OAAI/F,EAAS7B,EAAY4H,MACzDmL,GAAY,KAEb,CAACjS,EAAM2S,WAAY/R,EAAMG,EAAUyR,IAEtC,IAIMI,EAAqB,SAAC9B,EAAOI,GACjC,OACEjQ,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,CAAUnD,IAAK,MAAQqF,GACrBjQ,EAAAC,EAAAC,cAAC0R,GAAD,CAAiB/B,MAAOA,IACvBgC,EAAYhC,EAAMvO,MAKnBuQ,EAAc,SAAAvN,GAElB,OADcgN,EAAKpT,SAAS4T,OAAO,SAAA9C,GAAI,OAAIA,EAAK1K,UAAYA,IAC/C0L,IAAI,SAAChB,EAAMiB,GAAP,OACfjQ,EAAAC,EAAAC,cAAC6R,GAAD,CACEnH,IAAK,OAASqF,EACd3D,iBAAkBA,EAClBC,aAAcA,EACdC,MAAOyD,EACPjB,KAAMA,OAKZ,OACEhP,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ2R,aACtB3Q,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQ6R,aAEvBI,EACCjR,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,aAApB,WACEuQ,EA/BCQ,EAAOvB,IAAI,SAACH,EAAOI,GAAR,OAAc0B,EAAmB9B,EAAOI,KAkCtDjQ,EAAAC,EAAAC,cAAC8R,GAAD,sCCjFR,SAASC,GAAelT,GACtB,OAAOiB,EAAAC,EAAAC,cAACgS,GAAA,EAAD7S,OAAAkO,OAAA,GAAWxO,EAAX,CAAkBoT,UAAU,WAErC,IA6BeC,GA7BsB,SAAArT,GACnC,OACEiB,EAAAC,EAAAC,cAACmS,GAAA,EAAD,CACE9Q,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd6Q,iBAAkB,KAClB7S,KAAMV,EAAMwT,aACZ5Q,QAAS5C,EAAMyT,oBACfC,oBAAqBR,GACrBS,aAAc,CACZC,mBAAoB,cAEtBC,QAAS5S,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,cAAcvC,EAAM8T,cACtC9J,OAAQ,CACN/I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEkK,IAAI,QACJtI,aAAW,QACX7B,MAAM,UACNkB,QAAS5C,EAAMyT,qBAEfxS,EAAAC,EAAAC,cAACkB,EAAA,EAAD,6BCHK0R,GAtBW,WACxB,IAAMnT,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAQxC,OACEK,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACqB,iCAAlBpO,EAAKuB,KAAKoC,IACTtD,EAAAC,EAAAC,cAAC6S,GAAA,EAAD,CAAQtS,MAAM,YAAYE,QAVhB,WACVhB,EAAKkB,eAAiBlB,EAAKuB,MX8HL,SAAAvB,GAC5B9B,EAAG2G,WAAW,UAAUwO,IAAI,CAC1BC,QAAS,CAACtT,EAAK2D,KACfyM,QAAS,CACP,CAAEzM,IAAK3D,EAAK2D,IAAKnC,SAAUxB,EAAKwB,SAAU+R,YAAavT,EAAKuT,gBWjI5DC,CAAexT,EAAKuB,QAQlB,gBACelB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,aAGf,eCiEFgS,GAAkB,SAAC9P,EAAKpF,GAC5B,GAAKoF,GAAQpF,EAAb,CACA,IAAMgI,EAAahI,EAChB4T,OAAO,SAAA9C,GAAI,OAAIA,EAAK1L,MAAQA,IAC5B+P,KACC,SAACpT,EAAGqT,GAAJ,OAAUrT,EAAEyC,UAAUsL,SAASnL,UAAYyQ,EAAE5Q,UAAUsL,SAASnL,YAEpE,OAAOqD,EAAW,GACdzD,EAAiByD,EAAWA,EAAW9H,OAAS,GAAGsE,UAAUsL,UAC7D,iBAGA8B,GAAW1J,YAAW,SAAArE,GAAK,MAAK,CACpCwR,YAAa,CACX7F,WAAY,QAEdhP,OAAQ,CACNgP,WAAY,OACZiB,OAAQ,mBAEV6E,mBAAoB,CAClBhI,QAAS,OACTpJ,WAAY,UAEdqR,MAAO,CACL9U,OAAQ,MAIG+U,GAxGI,SAAA3U,GACjB,IAAMC,EAAU8Q,KACVyB,EAAS3R,YAAY,SAAAC,GAAK,OAAIA,EAAM0R,SACpC5R,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAChCzB,EAAa0B,YAAY,SAAAC,GAAK,OAAIA,EAAMyR,OAAxCpT,SAgBFyV,EAAY,SAAC9D,EAAOI,GACxB,OACEjQ,EAAAC,EAAAC,cAAA,OAAK0K,IAAK,MAAQqF,EAAG9P,UAAWnB,EAAQwU,oBACtCxT,EAAAC,EAAAC,cAACwQ,GAAA,EAAD,KAAWkD,EAAoB/D,IACZ,iCAAlBlQ,EAAKuB,KAAKoC,IACTtD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAS,kBAAMkT,EAAchE,EAAMvO,MAC7CtB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,mBAGF,KAMFwS,EAAsB,SAAA/D,GAC1B,OAAOA,EAAME,QAAQC,IAAI,SAACrQ,EAAMsQ,GAAP,OACvBjQ,EAAAC,EAAAC,cAAA,OAAK0K,IAAK,SAAWqF,GACnBjQ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEJ,QAAS,kBAAMmT,EAAwBnU,IACvCiL,IAAK,MAAQqF,EACbjP,IAAK,eACLC,IAAKtB,EAAKwB,SACVhB,UAAWnB,EAAQN,SAErBsB,EAAAC,EAAAC,cAAA,KAAGC,UAAWnB,EAAQyU,OAAQL,GAAgBzT,EAAK2D,IAAKpF,QAKxD2V,EAAgB,SAAAvP,GACpB,IAAMyP,EAAOC,OAAOC,SAASC,KAAO,YAAc5P,EAClD6P,UAAUC,UAAUC,UAAUN,GAAM/O,KAClC,aAGA,SAASvH,GACPE,QAAQwH,MAAM,+BAAgC1H,MAK9CqW,EAA0B,SAAAnU,GAC9BZ,EAAMuV,iBAAgB,EAAM,mBAAqB3U,EAAKuT,aZkDtB,SAAAqB,GAClC,IAAMC,EAAuBpX,EAC1BqX,YACAC,cAAc,4BAEjB,OAAOF,EAAqB,CAC1BD,UYvDAC,CAAqB7U,EAAK2D,KAAK0B,KAAK,SAAA2P,GAClC,IAAMC,EAAOD,EAAIzT,KACb,qBACA,6BACJnC,EAAMuV,iBAAgB,EAAMM,MAIhC,OAAO5U,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,KAjEEtD,EACLA,EAAOvB,IAAI,SAACH,EAAOI,GAAR,OAAc0D,EAAU9D,EAAOI,KAE1CjQ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,UACNN,UAAWnB,EAAQuU,aAHrB,sBC+BApN,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrC+S,WAAY,CACVjW,OAAQ,OACRC,MAAO,QACP0M,QAAS,OACTiD,cAAe,SACfpM,eAAgB,gBAChBkE,gBAAiBxE,EAAM2J,QAAQkF,WAAWjF,SAI/BoJ,GAxDU,SAAAhW,GAAS,IACxBU,EAAuBV,EAAvBU,KAAM8C,EAAiBxD,EAAjBwD,aACRvD,EAAUmH,KAFgB0F,EAGQ1M,oBAAS,GAHjB2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAGzB0G,EAHyBzG,EAAA,GAGXwI,EAHWxI,EAAA,GAAAG,EAIQ9M,mBAAS,qBAJjB+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAIzB4G,EAJyB3G,EAAA,GAIX8I,EAJW9I,EAAA,GAehC,OACElM,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACE/N,EAAAC,EAAAC,cAAC+U,GAAD,CACEzC,oBAZsB,WAC1B8B,GAAgB,IAYZ/B,aAAcA,EACdM,aAAcA,IAEhB7S,EAAAC,EAAAC,cAACgV,GAAA,EAAD,CACEzV,KAAMA,EACNkC,QAASY,GAAa,GACtB4S,OAAQ5S,GAAa,IAErBvC,EAAAC,EAAAC,cAAA,OACEkV,SAAU,EACVC,KAAK,SACL1U,QAAS4B,GAAa,GACtB+S,UAAW/S,GAAa,GACxBpC,UAAWnB,EAAQ8V,YAEnB9U,EAAAC,EAAAC,cAACqV,GAAD,CAAYjB,gBAxBK,SAACkB,EAAMZ,GAC9BN,EAAgBkB,GAChBR,EAAgBJ,MAuBV5U,EAAAC,EAAAC,cAACuV,GAAD,MACAzV,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,QAAQkV,cAAY,GAAxC,8BCoEKpX,eArBA,SAAAyD,GAAK,MAAK,CACvB4T,UAAW,CACTtV,SAAU,WACVsN,OAAQ,EACR1L,IAAK,QACLqE,KAAM,EACN8H,MAAO,EACPzP,OAAQ,UAEViX,YAAa,CACXvV,SAAU,WACVsN,OAAQ,EACR1L,KAAM,GACNqE,KAAM,EACN8H,MAAO,EACPzP,OAAQ,SACR8B,MAAOsB,EAAM2J,QAAQjL,MAAMkL,MAE7BkK,KAAM,CAAErK,QAAS,UAGJlN,CAtGA,SAAAS,GAAS,IACdC,EAAYD,EAAZC,QACF8W,EAAWC,sBAFKlK,EAGoB1M,mBAAS,GAH7B2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAGfmK,EAHelK,EAAA,GAGAmK,EAHAnK,EAAA,GAAA7M,EAIkBC,IAAMC,UAAS,GAJjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAIfiX,EAJe9W,EAAA,GAID+W,EAJC/W,EAAA,GAKhBO,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAExC0I,oBAAU,WACHtJ,EAAM0S,gBAGTwE,EAAiBlT,EAAahE,EAAM0S,gBAAgB/O,UAAUsL,WAF9DiI,EAAiB,IAIlB,CAAClX,EAAM0S,kBAUV,SAAS2E,EAAYxV,EAAOyV,GACX,cAAXA,GAGJF,GAAgB,GAGlB,OACEnW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAWnB,EAAQ6W,MACvB7V,EAAAC,EAAAC,cAAA,SACEnC,KAAK,OACLuY,OAAO,UACPC,SAAO,EACPxJ,SAAU,SAAA/D,GAAC,OAAIjK,EAAMyX,WAAWxN,IAChCnF,IAAKiS,KAGT9V,EAAAC,EAAAC,cAACuW,GAAA,EAAD,CACEnU,aAAW,MACXnC,UAAWnB,EAAQ2W,UACnBzH,KAAK,QACLvN,QA9BoB,WACnBhB,EAAKkB,cAGRiV,EAASpO,QAAQgP,QAFjBP,GAAgB,KA8BdnW,EAAAC,EAAAC,cAACkB,EAAA,EAAD,sBAEFpB,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CACEc,KAAM,GACN1N,QAASzB,EAAM4X,iBAAmB,gBAAkB,SACpD1I,MAAO+H,EACP7V,UAAWnB,EAAQ4W,cAGrB5V,EAAAC,EAAAC,cAACmS,GAAA,EAAD,CACE9Q,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdmR,QAAS5S,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,cAAT,0BACT7B,KAAMyW,EACN5D,iBAAkB,IAClB3Q,QAASyU,EACTrN,OACE/I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEkK,IAAI,QACJtI,aAAW,QACX7B,MAAM,UACNN,UAAWnB,EAAQ4X,MACnBjW,QAASyV,GAETpW,EAAAC,EAAAC,cAACkB,EAAA,EAAD,wCC9BGyV,GA9CG,SAAA9X,GAAS,IAAA8M,EACa1M,oBAAS,GADtB2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAClBiL,EADkBhL,EAAA,GACLiL,EADKjL,EAAA,GAEnBhM,EAAWC,cAEXiX,EAAW,CAEfC,WAAY,QAEZC,cAAe,CAAC9Z,EAASyE,KAAKsV,qBAAqBC,aACnDC,UAAW,CAETC,4BAA6B,kBAAM,KAmBvC,OAfAjP,oBAAU,WACKjL,EAASyE,OAAtB,IACI0V,EAAyBna,EAASyE,OAAO2V,mBAAmB,SAAA7X,GAC9DvC,EAASyE,OAAO4V,eAAera,EAASyE,KAAK6V,KAAKC,YAAYC,OAC9D9X,ErBxBiB,SAAAH,GAAI,MAAK,CAC9B5B,KCFsB,WDGtBC,QAAS,CACP2B,SqBqBWkY,CAAQlY,IACZA,GACHoX,GAAe,KAGnB,OAAO,WACLQ,MAGD,IAGDvX,EAAAC,EAAAC,cAAA,WACG4W,EACC9W,EAAAC,EAAAC,cAAC4X,GAAA7X,EAAD,CACE+W,SAAUA,EACVe,aAAc3a,EAASyE,SAGzB7B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,YAAYmI,MAAO,CAAEyG,UAAW,WAApD,oBCgFFjJ,GAAYC,YAAW,SAAArE,GAAK,MAAK,CACrCiW,IAAK,CACHnZ,OAAQ,QACR2M,QAAS,OACTiD,cAAe,SACfpM,eAAgB,gBAChB6I,SAAU,QACVpM,MAAO,WAIImZ,GArHI,SAAAlZ,GAAS,IAAA8M,EACkB1M,oBAAS,GAD3B2M,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GACnBqM,EADmBpM,EAAA,GACHqM,EADGrM,EAAA,GAAAG,EAEoB9M,mBAAS,IAF7B+M,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAEnBmM,EAFmBlM,EAAA,GAEFmM,EAFEnM,EAAA,GAAAiF,EAIoBhS,qBAJpBiS,EAAA/R,OAAAC,EAAA,EAAAD,CAAA8R,EAAA,GAInBM,EAJmBL,EAAA,GAIFkH,EAJElH,EAAA,GAAAmH,EAKgBpZ,oBAAS,GALzBqZ,EAAAnZ,OAAAC,EAAA,EAAAD,CAAAkZ,EAAA,GAKnB/G,EALmBgH,EAAA,GAKJC,EALID,EAAA,GAAAE,EAMsBvZ,oBAAS,GAN/BwZ,EAAAtZ,OAAAC,EAAA,EAAAD,CAAAqZ,EAAA,GAMnB/B,EANmBgC,EAAA,GAMDC,EANCD,EAAA,GAAAE,EAOU1Z,mBAAS,GAPnB2Z,EAAAzZ,OAAAC,EAAA,EAAAD,CAAAwZ,EAAA,GAOnBnH,EAPmBoH,EAAA,GAOPC,EAPOD,EAAA,GAQpB9Z,EAAUmH,KACVrG,EAAWC,cACXJ,EAAOC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,OAClC4R,EAAS3R,YAAY,SAAAC,GAAK,OAAIA,EAAM0R,SAEpChP,EAAe,SAAA2V,GAAc,OAAI,WACrCC,EAAkBD,KAGpB7P,oBAAU,WAED1I,EAAKkB,eACVoF,EAAoBtG,EAAKuB,KAAKoC,KAAK0B,KAAK,SAAAgK,GACtCsJ,EAAmBtJ,GACnByJ,GAAiB,MAIpB,CAAC9Y,IAEJ0I,oBAAU,WhBuEgB,IAAC2Q,EAAO5T,EgBtE5BzF,EAAKkB,eAAiB9B,EAAMka,WhBsEPD,EgBrEVja,EAAMka,ShBqEW7T,EgBrEDzF,EAAKuB,KAAKoC,IhBsEpCzF,EACJ2G,WAAW,SACXC,IAAIW,GACJC,OAAO,CAAE4T,SAAUD,MgBvEnB,CAACrZ,EAAMZ,EAAMka,WAEhB5Q,oBAAU,WACR,IACM/D,EADM,IAAI4U,IAAIlF,OAAOC,SAASC,MAChBiF,aAAaxT,IAAI,WAEjCrB,GAAW3E,EAAKkB,gBAClBmT,OAAOoF,QAAQC,UAAU,GAAI,GAAI,KhBsGd,SAAC/U,EAAS3E,GACjC9B,EAAG2G,WAAW,UACXC,IAAIH,GACJe,OAAO,CACN4N,QAAS7V,EAASE,UAAUuH,WAAWyU,WAAW3Z,EAAK2D,KACvDyM,QAAS3S,EAASE,UAAUuH,WAAWyU,WAAW,CAChDhW,IAAK3D,EAAK2D,IACVnC,SAAUxB,EAAKwB,SACf+R,YAAavT,EAAKuT,gBgB7GpBqG,CAAUjV,EAAS3E,EAAKuB,QAEzB,CAACvB,EAAMA,EAAKkB,gBAEfwH,oBAAU,WhBiFiB,IAAA/E,EgBhFrB3D,EAAKkB,eAAiBlB,EAAKuB,OhBgFNoC,EgB/ET3D,EAAKuB,KAAKoC,IhBgFrBzF,EACJ2G,WAAW,UACXgB,MAAM,UAAW,iBAAkBlC,GACnCqC,MACAX,KAAK,SAAAY,GACJ,IAAI2L,EAAS,GAMb,OALA3L,EAAcvB,QAAQ,SAAAI,GACpB,IAAMoL,EAAQpL,EAAIvD,OAClB2O,EAAMvO,GAAKmD,EAAInD,GACfiQ,EAAOzL,KAAK+J,KAEP0B,KgB3FsBvM,KAAK,SAAAuM,GAChCzR,EtBpDiB,SAAAyR,GAAM,MAAK,CAClCxT,KCfwB,aDgBxBC,QAAS,CAAEuT,WsBkDIiI,CAAUjI,OAGtB,CAAC5R,EAAMG,IAEV,IAUM2Z,EAAiB,SAAAlI,GACrB,OAAOA,EAAOvB,IAAI,SAAAH,GAAK,OAAIA,EAAMvO,MAG7BoY,EAAsB,WAC1Bd,GAAoB,GACpBG,EAAcrH,EAAa,GAC3BzL,EAAoBtG,EAAKuB,KAAKoC,KAAK0B,KAAK,SAAAgK,GACtCsJ,EAAmBtJ,GACnByJ,GAAiB,MAIrB,OACEzY,EAAAC,EAAAC,cAAA,OAAKC,UAAWnB,EAAQgZ,KACtBhY,EAAAC,EAAAC,cAACyZ,EAAD,MAECha,EAAKkB,cACJb,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACE/N,EAAAC,EAAAC,cAAC0Z,GAAD,CAAkBna,KAAMyY,EAAgB3V,aAAcA,IACtDvC,EAAAC,EAAAC,cAAC2Z,GAAD,CACEzB,gBAAiBA,EACjB3G,gBAAiBA,EACjBD,cAAeA,EACfE,WAAYA,KAIhB1R,EAAAC,EAAAC,cAAC4Z,GAAD,MAEF9Z,EAAAC,EAAAC,cAAC6Z,EAAD,CACExX,aAAcA,EACdC,OACExC,EAAAC,EAAAC,cAAC8Z,GAAD,CACErD,iBAAkBA,EAClBH,WA7CS,SAAA5V,GACjB,IAAIsC,EAAOtC,EAAMqZ,OAAOC,MAAM,GAC9B,GAAKhX,IAAQvD,EAAKkB,cAAlB,CACA+X,GAAoB,GACpB,IAAMzV,EAAWsW,EAAelI,IlB1CP,SAACrO,EAAMiX,GAC7BjX,GAIL,IAAIkX,IAAWlX,EAAM,CACnBmX,QAAS,GACTvb,MAAO,IACPwb,QAHmB,SAGXC,GACNJ,EAASI,IAEXpV,MANmB,SAMb1H,GACJE,QAAQC,IAAIH,EAAImV,YkB+BlB4H,CAActX,EAAM,SAAAA,GAClBmV,EAAmBa,IAAIuB,gBAAgBvX,IACvCD,EAAYC,EAAMvD,EAAKuB,KAAMiC,EAAUuW,OAuCjCjI,gBAAiBA,QCzGvBiJ,GAAchb,QACW,cAA7BsU,OAAOC,SAAS0G,UAEe,UAA7B3G,OAAOC,SAAS0G,UAEhB3G,OAAOC,SAAS0G,SAASC,MACvB,2DAIC,SAASC,GAASne,GACvB,GAA6C,kBAAmByX,UAAW,CAGzE,GADkB,IAAI+E,IAAI4B,UAAwB9G,OAAOC,SAASC,MACpD6G,SAAW/G,OAAOC,SAAS8G,OAIvC,OAGF/G,OAAOgH,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAjR,OAAM8Q,UAAN,sBAEPJ,KAgEV,SAAiCO,EAAOve,GAEtCwe,MAAMD,GACHjW,KAAK,SAAAmW,GAEJ,IAAMnX,EAAcmX,EAASC,QAAQzV,IAAI,gBAEnB,MAApBwV,EAASE,QACO,MAAfrX,IAA8D,IAAvCA,EAAYsX,QAAQ,cAG5CnH,UAAUoH,cAAcC,MAAMxW,KAAK,SAAAyW,GACjCA,EAAaC,aAAa1W,KAAK,WAC7BgP,OAAOC,SAAS0H,aAKpBC,GAAgBX,EAAOve,KAG1Bc,MAAM,WACLG,QAAQC,IACN,mEArFAie,CAAwBZ,EAAOve,GAI/ByX,UAAUoH,cAAcC,MAAMxW,KAAK,WACjCrH,QAAQC,IACN,gHAMJge,GAAgBX,EAAOve,MAM/B,SAASkf,GAAgBX,EAAOve,GAC9ByX,UAAUoH,cACPV,SAASI,GACTjW,KAAK,SAAAyW,GACJA,EAAaK,cAAgB,WAC3B,IAAMC,EAAmBN,EAAaO,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlc,QACfsU,UAAUoH,cAAcW,YAI1Bve,QAAQC,IACN,iHAKElB,GAAUA,EAAOyf,UACnBzf,EAAOyf,SAASV,KAMlB9d,QAAQC,IAAI,sCAGRlB,GAAUA,EAAO0f,WACnB1f,EAAO0f,UAAUX,UAO5Bje,MAAM,SAAA2H,GACLxH,QAAQwH,MAAM,4CAA6CA,KC7FjE,IAmBekX,GAnBQ,SAAAtd,GACrB,OACEiB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmS,GAAA,EAAD,CACE9Q,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdhC,KAAMV,EAAMud,mBACZ3a,QAAS5C,EAAMyT,oBACfE,aAAc,CACZC,mBAAoB,cAEtBC,QAAS5S,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,cAAT,oECdXib,GAAe,GCAfA,GAAe,CACnB1b,eAAe,EACfK,KAAM,ICFFqb,GAAe,CACnBre,SAAU,ICEGse,gBAAgB,CAAE7c,KFElB,WAAkC,IAAjCE,EAAiC1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBoe,GAAcxT,EAAW5K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQ0K,EAAOhL,MACb,IzBRoB,WyBQL,IACL4B,EAASoJ,EAAO/K,QAAhB2B,KACR,OAAON,OAAA0G,EAAA,EAAA1G,CAAA,GACFQ,EADL,CAEEgB,gBAAiBlB,EACjBuB,KAAMvB,IAGV,IzBfkB,SyBgBhB,OAAON,OAAA0G,EAAA,EAAA1G,CAAA,GACFQ,EADL,CAEEgB,eAAe,EACfK,KAAM,KAGV,QACE,OAAOrB,IEpB0B0R,OHDxB,WAAkC,IAAjC1R,EAAiC1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBoe,GAAcxT,EAAW5K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQ0K,EAAOhL,MACb,IxBNsB,awBQpB,OADmBgL,EAAO/K,QAAlBuT,OAGV,QACE,OAAO1R,IGNkCyR,KDChC,WAAkC,IAAjCzR,EAAiC1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBoe,GAAcxT,EAAW5K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQ0K,EAAOhL,MACb,I1BLqB,Y0BKL,IACNG,EAAa6K,EAAO/K,QAApBE,SACR,OAAOmB,OAAA0G,EAAA,EAAA1G,CAAA,GACFQ,EADL,CAEE3B,aAGJ,QACE,OAAO2B,MEbE4c,gBAAYC,ICQrBC,GAAYvf,KAASuf,YAErB5a,GAAQ6a,YAAe,CAC3BlR,QAAS,CACP3N,KAAM,OACN6S,WAAY,CAAEjF,KAAM,WACpBkR,QAAS,CAAElR,KAAM,WACjBmR,UAAW,CAAEnR,KAAM,WACnBlL,MAAO,CAAEkL,KAAM,WACfkC,KAAM,CAAElC,KAAM,YAEhBoR,WAAY,CAAEC,iBAAiB,KAqElBhF,eA/Db,SAAAA,EAAYjZ,GAAO,IAAAke,EAAA,OAAA5d,OAAA6d,EAAA,EAAA7d,CAAA8d,KAAAnF,IACjBiF,EAAA5d,OAAA+d,EAAA,EAAA/d,CAAA8d,KAAA9d,OAAAge,EAAA,EAAAhe,CAAA2Y,GAAAsF,KAAAH,KAAMpe,KAkCRwe,0BAA4B,SAAA9B,GAC1BwB,EAAKO,SAAS,CAAElB,oBAAoB,KApCnBW,EAuCnBzK,oBAAsB,SAAC5R,EAAOyV,GACb,cAAXA,GAIJ4G,EAAKO,SAAS,CAAElB,oBAAoB,KAzCpCW,EAAKpd,MAAQ,CACXyc,oBAAoB,EACpBrD,SAAU,IAGR,kBAAmB9E,WACrBA,UAAUoH,cACPV,SAAS,mCACT7V,KAAK,SAAAyW,GACJkB,GAAUc,iBAAiBhC,GCxC9B,SAAwBkB,GAC7B,OAAOA,EAAUe,oBAAoB1Y,KAAK,WACxC,OAAO2X,EAAUgB,aDuCXC,CAAejB,IACZ3X,KAAK,SAAAgU,GACJiE,EAAKO,SAAS,CAAEvE,SAAUD,MAE3Bxb,MAAM,SAAA2H,GACc,iCAAfA,EAAMzH,KACRC,QAAQC,IAAI,gDAEZD,QAAQC,IAAI,iBAAkBuH,OAIrC3H,MAAM,SAASC,GACdE,QAAQC,IAAI,6CAA8CH,KAIhE8d,GAAuB,CACrBY,SAAUc,EAAKM,4BA/BAN,wEAgDjB,OACEjd,EAAAC,EAAAC,cAAC2d,EAAA,EAAD,CAAkB9b,MAAOA,IACvB/B,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,MACA9d,EAAAC,EAAAC,cAAC6d,EAAA,EAAD,CAAUC,MAAOA,IACfhe,EAAAC,EAAAC,cAAC+d,GAAD,CAAYhF,SAAUkE,KAAKtd,MAAMoZ,YAEnCjZ,EAAAC,EAAAC,cAACge,GAAD,CACE1L,oBAAqB2K,KAAK3K,oBAC1B8J,mBAAoBa,KAAKtd,MAAMyc,6BAzDvB6B,aEtBlB3U,IAAS4U,OAAOpe,EAAAC,EAAAC,cAACme,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.ee3fd6ac.chunk.js","sourcesContent":["export const config = {\r\n  apiKey: \"AIzaSyCNrWqbvDNEp53wNfDtDMqfZbgStsJEM-E\",\r\n  authDomain: \"paiweb.firebaseapp.com\",\r\n  databaseURL: \"https://paiweb.firebaseio.com\",\r\n  projectId: \"paiweb\",\r\n  storageBucket: \"paiweb.appspot.com\",\r\n  messagingSenderId: \"560094021764\",\r\n  appId: \"1:560094021764:web:d9efaf85f4747eb1\"\r\n}\r\n","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/storage\"\r\nimport \"firebase/messaging\"\r\nimport { config } from \"./superSecretConfigFile\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: config.apiKey,\r\n  authDomain: config.authDomain,\r\n  databaseURL: config.databaseUrl,\r\n  projectId: config.projectId,\r\n  storageBucket: config.storageBucket,\r\n  messagingSenderId: config.messagingSenderId,\r\n  appId: config.appId\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nfirebase\r\n  .firestore()\r\n  .enablePersistence()\r\n  .catch(function(err) {\r\n    if (err.code === \"failed-precondition\") {\r\n      console.log(err.code)\r\n      // Multiple tabs open, persistence can only be enabled\r\n      // in one tab at a a time.\r\n      // ...\r\n    } else if (err.code === \"unimplemented\") {\r\n      // The current browser does not support all of the\r\n      // features required to enable persistence\r\n      // ...\r\n      console.log(err.code)\r\n    }\r\n  })\r\n\r\nexport default firebase\r\nexport const db = firebase.firestore()\r\n","import { SET_USER, SET_GROUPS, LOGOUT, SET_POSTS } from \"./actionTypes\"\r\n\r\nexport const setUser = user => ({\r\n  type: SET_USER,\r\n  payload: {\r\n    user\r\n  }\r\n})\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n  payload: {}\r\n})\r\n\r\nexport const setGroups = groups => ({\r\n  type: SET_GROUPS,\r\n  payload: { groups }\r\n})\r\n\r\nexport const setAllPosts = (allPosts = []) => ({\r\n  type: SET_POSTS,\r\n  payload: { allPosts }\r\n})\r\n","export const SET_GROUPS = \"SET_GROUPS\"\r\nexport const SET_USER = \"SET_USER\"\r\nexport const LOGOUT = \"LOGOUT\"\r\nexport const SET_POSTS = \"SET_POSTS\"\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Menu from \"@material-ui/core/Menu\"\r\nimport { useSelector } from \"react-redux\"\r\nimport firebase from \"../firebase/firebase\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { logout } from \"../redux/actions\"\r\n\r\nconst CustomAppBar = props => {\r\n  const { classes } = props\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  function handleMenu(event) {\r\n    user.authenticated && setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n  function handleSignOut() {\r\n    setAnchorEl(null)\r\n    firebase.auth().signOut()\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Pai\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={handleMenu}>\r\n            {user.authenticated ? (\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src={user.data.photoURL}\r\n                className={classes.avatar}\r\n              />\r\n            ) : (\r\n              <Icon>account_circle</Icon>\r\n            )}\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleSignOut}>Sign out</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  root: {},\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  avatar: {\r\n    margin: 0,\r\n    padding: 0,\r\n    height: \"24px\",\r\n    width: \"24px\"\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CustomAppBar)\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst BottomAppBar = props => {\r\n  const { classes } = props\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" color=\"primary\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar} variant=\"dense\">\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={props.toggleDrawer(true)}\r\n        >\r\n          <Icon>menu</Icon>\r\n        </IconButton>\r\n        {props.camera}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  toolbar: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  }\r\n})\r\n\r\nexport default withStyles(styles)(BottomAppBar)\r\n","import Compressor from \"compressorjs\"\r\nimport { postValidTimeSeconds } from \"./settingsConfig\"\r\n\r\nexport const convertTimeStamp = timestamp => {\r\n  var now = new Date(),\r\n    secondsPast = (now.getTime() - timestamp.getTime()) / 1000\r\n  if (secondsPast < 60) {\r\n    return parseInt(secondsPast) + \"s\"\r\n  }\r\n  if (secondsPast < 3600) {\r\n    return parseInt(secondsPast / 60) + \"m\"\r\n  }\r\n  if (secondsPast <= 172800) {\r\n    return parseInt(secondsPast / 3600) + \"h\"\r\n  }\r\n  if (secondsPast > 86400) {\r\n    return \"< 2 days\"\r\n  }\r\n}\r\n\r\nexport const progressCalc = timestamp => {\r\n  const calc =\r\n    100 -\r\n    ((new Date().getTime() / 1000 - timestamp.getTime() / 1000) /\r\n      postValidTimeSeconds) *\r\n      100\r\n  return calc < 0 ? 0 : calc > 100 ? 100 : calc\r\n}\r\n\r\nexport const changeImageName = file => {\r\n  return Date.now() + file.name.substr(file.name.lastIndexOf(\".\"))\r\n}\r\n\r\nexport const compressImage = (file, callback) => {\r\n  if (!file) {\r\n    return\r\n  }\r\n\r\n  new Compressor(file, {\r\n    quality: 0.5,\r\n    width: 512,\r\n    success(result) {\r\n      callback(result)\r\n    },\r\n    error(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n}\r\n","export const postValidTimeMilliSeconds = 24 * 60 * 60 * 1000 //24hours in milliseconds\r\nexport const postValidTimeSeconds = 24 * 60 * 60 //24hours in seconds\r\n","import firebase, { db } from \"./firebase\"\r\nimport { postValidTimeMilliSeconds } from \"../settingsConfig\"\r\nimport { changeImageName } from \"../utils\"\r\n\r\nexport const uploadImage = (file, user, groupIds, callBack) => {\r\n  const imagePath = \"images/\" + user.uid + \"/\" + changeImageName(file)\r\n  var storageRef = firebase.storage().ref(imagePath)\r\n  var task = storageRef.put(file, {\r\n    cacheControl: \"max-age=432001\",\r\n    contentType: file.type\r\n  })\r\n  task.on(\r\n    \"state_changed\",\r\n    function progress(snapshot) {\r\n      // var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      // console.log(\"percentage\", percentage)\r\n    },\r\n    function error(err) {\r\n      \"ERROR!\"\r\n    },\r\n    function complete() {\r\n      saveImageRef(imagePath, user, groupIds, callBack)\r\n    }\r\n  )\r\n}\r\n\r\nconst saveImageRef = (ref, user, groupIds, callBack) => {\r\n  var batch = db.batch()\r\n\r\n  groupIds.forEach(groupId => {\r\n    var postRef = db.collection(\"posts\").doc()\r\n    batch.set(postRef, {\r\n      uid: user.uid,\r\n      userPhotoURL: user.photoURL,\r\n      imgRef: ref,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      groupId\r\n    })\r\n  })\r\n  batch\r\n    .commit()\r\n    .then(function(docRef) {\r\n      updateLastUserPost(user.uid).then(() => {\r\n        callBack()\r\n      })\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error)\r\n    })\r\n}\r\nexport const saveCanvasData = (canvasData, postId, uid) => {\r\n  db.collection(\"posts\")\r\n    .doc(postId)\r\n    .update({\r\n      [`canvasDrawings.${uid}`]: canvasData\r\n    })\r\n}\r\n\r\nconst updateLastUserPost = userId => {\r\n  return db\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .update({ lastUpdate: firebase.firestore.FieldValue.serverTimestamp() })\r\n}\r\n\r\nexport const getAllUsers = async () => {\r\n  return db\r\n    .collection(\"users\")\r\n    .get()\r\n    .then(querySnapshot => {\r\n      let users = []\r\n      querySnapshot.forEach(doc => {\r\n        users.push(doc.data())\r\n      })\r\n      return users\r\n    })\r\n}\r\n\r\nexport const getAllPosts = groupIds => {\r\n  return db\r\n    .collection(\"posts\")\r\n    .where(\"timestamp\", \">\", new Date(Date.now() - postValidTimeMilliSeconds))\r\n    .where(\"groupId\", \"in\", groupIds)\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .limit(15)\r\n    .get()\r\n    .then(querySnapshot => {\r\n      let posts = []\r\n      querySnapshot.forEach(doc => {\r\n        posts.push({ ...doc.data(), postId: doc.id })\r\n      })\r\n      return posts\r\n    })\r\n}\r\n\r\nexport const latestTimeValidPost = userId => {\r\n  return db\r\n    .collection(\"posts\")\r\n    .where(\"timestamp\", \">\", new Date(new Date() - postValidTimeMilliSeconds))\r\n    .where(\"uid\", \"==\", userId)\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .limit(1)\r\n    .get()\r\n    .then(querySnapshot => {\r\n      let latestPost\r\n      querySnapshot.forEach(doc => {\r\n        latestPost = doc.data()\r\n      })\r\n      return latestPost\r\n    })\r\n}\r\n\r\nexport const getImageUrlOnRef = path => {\r\n  if (!path) return\r\n  var storageRef = firebase.storage().ref(path)\r\n  return storageRef.getDownloadURL().then(url => url)\r\n}\r\n\r\nexport const saveFCMToken = (token, userId) => {\r\n  return db\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .update({ FCMToken: token })\r\n}\r\n\r\nexport const sendPushNotification = toUid => {\r\n  const sendPushNotification = firebase\r\n    .functions()\r\n    .httpsCallable(\"sendPushNotificationTest\")\r\n\r\n  return sendPushNotification({\r\n    toUid\r\n  })\r\n}\r\n\r\nexport const createNewGroup = user => {\r\n  db.collection(\"groups\").add({\r\n    uidList: [user.uid],\r\n    members: [\r\n      { uid: user.uid, photoURL: user.photoURL, displayName: user.displayName }\r\n    ]\r\n  })\r\n}\r\n\r\nexport const getUserGroups = uid => {\r\n  return db\r\n    .collection(\"groups\")\r\n    .where(\"uidList\", \"array-contains\", uid)\r\n    .get()\r\n    .then(querySnapshot => {\r\n      let groups = []\r\n      querySnapshot.forEach(doc => {\r\n        const group = doc.data()\r\n        group.id = doc.id\r\n        groups.push(group)\r\n      })\r\n      return groups\r\n    })\r\n}\r\n\r\nexport const joinGroup = (groupId, user) => {\r\n  db.collection(\"groups\")\r\n    .doc(groupId)\r\n    .update({\r\n      uidList: firebase.firestore.FieldValue.arrayUnion(user.uid),\r\n      members: firebase.firestore.FieldValue.arrayUnion({\r\n        uid: user.uid,\r\n        photoURL: user.photoURL,\r\n        displayName: user.displayName\r\n      })\r\n    })\r\n}\r\n","import React, { useRef, useEffect, useCallback } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { saveCanvasData } from \"../firebase/dbFunctions\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst PostImageCanvasDraw = props => {\r\n  const classes = useStyles()\r\n  const uid = useSelector(state => state.user.data.uid)\r\n  const { canvasDrawing, imageWrapperRef, postId, drawEnabled } = props\r\n  let canvasRef = useRef()\r\n  let canvasData = useRef([])\r\n  let pressing = false\r\n  let lastX = useRef()\r\n  let lastY = useRef()\r\n  let count = 0\r\n\r\n  const draw = useCallback((x, y) => {\r\n    let context = canvasRef.current.getContext(\"2d\")\r\n    canvasData.current.push({ x, y })\r\n    context.beginPath()\r\n    context.strokeStyle = \"red\"\r\n    context.lineWidth = 3\r\n    context.lineJoin = \"round\"\r\n    context.moveTo(lastX.current, lastY.current)\r\n    context.lineTo(x, y)\r\n    context.stroke()\r\n    context.closePath()\r\n    lastX.current = x\r\n    lastY.current = y\r\n  }, [])\r\n\r\n  const resetLastPosition = useCallback(() => {\r\n    lastX.current = undefined\r\n    lastY.current = undefined\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      const drawCanvasDrawing = () => {\r\n        if (canvasDrawing && canvasRef.current) {\r\n          canvasData.current = []\r\n          resetLastPosition()\r\n          let context = canvasRef.current.getContext(\"2d\")\r\n          context.clearRect(0, 0, canvasRef.width, canvasRef.height)\r\n          canvasDrawing.forEach(data => {\r\n            if (data === \"up\") {\r\n              canvasData.current.push(\"up\")\r\n              resetLastPosition()\r\n            } else {\r\n              draw(data.x, data.y)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      resize()\r\n      drawCanvasDrawing()\r\n    })\r\n    resizeObserver.observe(imageWrapperRef.current)\r\n  }, [imageWrapperRef, canvasDrawing, draw, resetLastPosition])\r\n\r\n  const resize = () => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.width = \"100%\"\r\n      canvasRef.current.style.height = \"100%\"\r\n      canvasRef.current.width = canvasRef.current.offsetWidth\r\n      canvasRef.current.height = canvasRef.current.offsetHeight\r\n    }\r\n  }\r\n\r\n  const getPointerPos = e => {\r\n    const rect = ReactDOM.findDOMNode(canvasRef.current).getBoundingClientRect()\r\n    let clientX = e.clientX\r\n    let clientY = e.clientY\r\n\r\n    if (e.changedTouches && e.changedTouches.length > 0) {\r\n      clientX = e.changedTouches[0].clientX\r\n      clientY = e.changedTouches[0].clientY\r\n    }\r\n\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top\r\n    }\r\n  }\r\n\r\n  const handleTouch = (action, e) => {\r\n    if (drawEnabled) {\r\n      if (action === \"down\") {\r\n        down(e)\r\n      }\r\n      if (action === \"move\") {\r\n        move(e)\r\n      }\r\n      if (action === \"up\") {\r\n        up(e)\r\n      }\r\n    }\r\n  }\r\n\r\n  const down = e => {\r\n    pressing = true\r\n  }\r\n\r\n  const move = e => {\r\n    e.preventDefault()\r\n    if (canDraw()) {\r\n      const { x, y } = getPointerPos(e)\r\n      draw(x, y)\r\n    }\r\n  }\r\n\r\n  const canDraw = () => {\r\n    if (pressing && count > 5) {\r\n      count = 0\r\n      return true\r\n    }\r\n    count++\r\n    return false\r\n  }\r\n\r\n  const up = e => {\r\n    if (pressing) {\r\n      canvasData.current.push(\"up\")\r\n      resetLastPosition()\r\n      saveCanvasData(canvasData.current, postId, uid)\r\n    }\r\n    pressing = false\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      className={drawEnabled ? classes.touchActionNone : classes.canvas}\r\n      onMouseDown={e => handleTouch(\"down\", e)}\r\n      onTouchStart={e => handleTouch(\"down\", e)}\r\n      onMouseMove={e => handleTouch(\"move\", e)}\r\n      onTouchMove={e => handleTouch(\"move\", e)}\r\n      onMouseUp={e => handleTouch(\"up\", e)}\r\n      onTouchEnd={e => handleTouch(\"up\", e)}\r\n      onMouseOut={e => handleTouch(\"up\", e)}\r\n      onTouchCancel={e => handleTouch(\"up\", e)}\r\n      ref={canvasRef}\r\n    />\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  canvas: {\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0\",\r\n    backgroundColor: \"#ffffff00\"\r\n  },\r\n  touchActionNone: {\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0\",\r\n    backgroundColor: \"#ffffff00\",\r\n    touchAction: \"none\"\r\n  }\r\n}))\r\n\r\nexport default PostImageCanvasDraw\r\n","import React, { useRef, useEffect, useCallback } from \"react\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst PostImageCanvases = props => {\r\n  const { canvasDrawings, imageWrapperRef } = props\r\n  let canvasRef = useRef()\r\n  const classes = useStyles()\r\n  let lastX = useRef()\r\n  let lastY = useRef()\r\n\r\n  const draw = useCallback((x, y) => {\r\n    let context = canvasRef.current.getContext(\"2d\")\r\n    context.beginPath()\r\n    context.strokeStyle = \"red\"\r\n    context.lineWidth = 3\r\n    context.lineJoin = \"round\"\r\n    context.moveTo(lastX.current, lastY.current)\r\n    context.lineTo(x, y)\r\n    context.stroke()\r\n    context.closePath()\r\n    lastX.current = x\r\n    lastY.current = y\r\n  }, [])\r\n\r\n  const resetLastPosition = useCallback(() => {\r\n    lastX.current = undefined\r\n    lastY.current = undefined\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      const drawCanvasDrawing = () => {\r\n        if (canvasDrawings && canvasRef.current) {\r\n          resetLastPosition()\r\n          let context = canvasRef.current.getContext(\"2d\")\r\n          context.clearRect(0, 0, canvasRef.width, canvasRef.height)\r\n          for (const key in canvasDrawings) {\r\n            canvasDrawings[key].forEach(data => {\r\n              if (data === \"up\") {\r\n                resetLastPosition()\r\n              } else {\r\n                draw(data.x, data.y)\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n      resize()\r\n      drawCanvasDrawing()\r\n    })\r\n    resizeObserver.observe(imageWrapperRef.current)\r\n  }, [imageWrapperRef, draw, canvasDrawings, resetLastPosition])\r\n\r\n  const resize = () => {\r\n    if (canvasRef.current) {\r\n      canvasRef.current.style.width = \"100%\"\r\n      canvasRef.current.style.height = \"100%\"\r\n      canvasRef.current.width = canvasRef.current.offsetWidth\r\n      canvasRef.current.height = canvasRef.current.offsetHeight\r\n    }\r\n  }\r\n\r\n  return <canvas className={classes.canvas} ref={canvasRef} />\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  canvas: {\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0\",\r\n    backgroundColor: \"#ffffff00\"\r\n  }\r\n}))\r\n\r\nexport default PostImageCanvases\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getImageUrlOnRef } from \"../firebase/dbFunctions.js\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Img from \"react-image\"\r\nimport VisibilitySensor from \"react-visibility-sensor\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport PostImageCanvasDraw from \"./PostImageCanvasDraw\"\r\nimport PostImageCanvases from \"./PostImageCanvases\"\r\n\r\nconst PostImage = props => {\r\n  const [imageUrl, setImageUrl] = useState(\"\")\r\n  const [shouldRenderImage, setShouldRenderImage] = useState(false)\r\n  let imageWrapperRef = useRef()\r\n  const classes = useStyles()\r\n  const uid = useSelector(state => state.user.data.uid)\r\n  const {\r\n    imageRef,\r\n    renderNextImages,\r\n    renderImages,\r\n    index,\r\n    drawEnabled,\r\n    postId,\r\n    canvasDrawings\r\n  } = props\r\n\r\n  useEffect(() => getImageUrl(imageRef), [imageRef])\r\n\r\n  const getImageUrl = imageRef => {\r\n    getImageUrlOnRef(imageRef).then(url => setImageUrl(url))\r\n  }\r\n\r\n  function onChange(isVisible) {\r\n    setShouldRenderImage(isVisible)\r\n    if (isVisible) {\r\n      renderNextImages(index)\r\n    }\r\n  }\r\n\r\n  const renderImage = () => {\r\n    if (index <= renderImages) {\r\n      return (\r\n        <Img\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          src={imageUrl}\r\n          alt=\"image post\"\r\n          className={classes.img}\r\n          loader={\r\n            <div className={classes.progressWrapper}>\r\n              <CircularProgress className={classes.progress} />\r\n            </div>\r\n          }\r\n        />\r\n      )\r\n    }\r\n    return \"\"\r\n  }\r\n  const getCanvasDrawingsExcludingYourOwn = () => {\r\n    if (!canvasDrawings) return\r\n    let newCanvasDrawings = Object.assign({}, canvasDrawings)\r\n    delete newCanvasDrawings[uid]\r\n    return newCanvasDrawings\r\n  }\r\n  return (\r\n    <VisibilitySensor onChange={onChange} active={!shouldRenderImage}>\r\n      <div className={classes.imgDiv} ref={imageWrapperRef}>\r\n        {renderImage()}\r\n        <PostImageCanvases\r\n          canvasDrawings={getCanvasDrawingsExcludingYourOwn()}\r\n          imageWrapperRef={imageWrapperRef}\r\n        />\r\n        <PostImageCanvasDraw\r\n          drawEnabled={drawEnabled}\r\n          imageWrapperRef={imageWrapperRef}\r\n          postId={postId}\r\n          canvasDrawing={canvasDrawings && canvasDrawings[uid]}\r\n        />\r\n      </div>\r\n    </VisibilitySensor>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  imgDiv: {\r\n    position: \"relative\",\r\n    borderRadius: \"4px\",\r\n    minHeight: \"250px\",\r\n    maxHeight: \"75vh\",\r\n    maxWidth: \"450px\",\r\n    overflow: \"hidden\"\r\n  },\r\n  img: {\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  },\r\n  progressWrapper: {\r\n    widh: \"100%\",\r\n    height: \"250px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  progress: {\r\n    color: theme.palette.color.main\r\n  }\r\n}))\r\n\r\nexport default PostImage\r\n","import React, { Fragment } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { progressCalc, convertTimeStamp } from \"../utils\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\n\r\nconst PostTimer = props => {\r\n  const classes = useStyles()\r\n  const timestamp = props.timestamp\r\n  return (\r\n    <Fragment>\r\n      <Typography variant=\"caption\">\r\n        {convertTimeStamp(timestamp.toDate())}\r\n      </Typography>\r\n      <CircularProgress\r\n        color=\"primary\"\r\n        variant=\"static\"\r\n        value={progressCalc(timestamp.toDate())}\r\n        className={classes.progress}\r\n        size={16}\r\n      />\r\n      <CircularProgress\r\n        variant=\"static\"\r\n        value={100}\r\n        className={classes.innerProgress}\r\n        size={16}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    marginLeft: \"5px\",\r\n    color: theme.palette.color.main,\r\n    zIndex: 2\r\n  },\r\n  innerProgress: {\r\n    position: \"relative\",\r\n    marginLeft: \"-16px\",\r\n    color: theme.palette.gray.main,\r\n    zIndex: 1\r\n  }\r\n}))\r\n\r\nexport default PostTimer\r\n","import React from \"react\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst DrawIcon = props => {\r\n  const { editDrawEnabled, drawEnabled } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <Icon\r\n      fontSize=\"large\"\r\n      className={classes.icon}\r\n      onClick={editDrawEnabled}\r\n      color={drawEnabled ? \"secondary\" : \"disabled\"}\r\n    >\r\n      brush\r\n    </Icon>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    position: \"absolute\",\r\n    bottom: \"-16px\",\r\n    right: \"8px\"\r\n  }\r\n}))\r\n\r\nexport default DrawIcon\r\n","import React, { useState } from \"react\"\r\nimport PostImage from \"./PostImage\"\r\nimport PostTimer from \"./PostTimer\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport DrawIcon from \"./DrawIcon\"\r\n\r\nconst Post = props => {\r\n  const classes = useStyles()\r\n  const [drawEnabled, setDrawEnabled] = useState(false)\r\n  const { post, renderNextImages, renderImages, index } = props\r\n\r\n  const editDrawEnabled = () => {\r\n    setDrawEnabled(!drawEnabled)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.postWrapper}>\r\n        <div className={classes.avatarTimeDiv}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            alt=\"Post Avatar\"\r\n            src={post.userPhotoURL}\r\n          />\r\n          <PostTimer timestamp={post.timestamp} />\r\n        </div>\r\n        <PostImage\r\n          drawEnabled={drawEnabled}\r\n          imageRef={post.imgRef}\r\n          renderNextImages={renderNextImages}\r\n          renderImages={renderImages}\r\n          index={index}\r\n          canvasDrawings={post.canvasDrawings}\r\n          postId={post.postId}\r\n        />\r\n        <DrawIcon editDrawEnabled={editDrawEnabled} drawEnabled={drawEnabled} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    scrollSnapAlign: \"start\",\r\n    padding: \"0px\",\r\n    height: \"82vh\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  postWrapper: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: \"450px\"\r\n  },\r\n  avatar: {\r\n    border: \"2px solid #fafafa\",\r\n    marginLeft: \"6px\"\r\n  },\r\n  avatarTimeDiv: {\r\n    position: \"relative\",\r\n    zIndex: 2,\r\n    display: \"flex\",\r\n    marginBottom: \"-21px\"\r\n  }\r\n}))\r\n\r\nexport default Post\r\n","import React from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst NoAccessToFeed = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <div />\r\n      <span>\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Show friends what you are up to.\r\n          <br /> Post a picture.\r\n        </Typography>\r\n      </span>\r\n      <Icon color=\"disabled\" className={classes.icon} fontSize=\"large\">\r\n        arrow_downward\r\n      </Icon>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"0px\",\r\n    height: \"78vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  \"@keyframes arrowAnimation\": {\r\n    from: { transform: `translateY(0)` },\r\n    to: { transform: `translateY(30px)` }\r\n  },\r\n  icon: {\r\n    position: \"relative\",\r\n    fontSize: \"65px\",\r\n    animation: \"$arrowAnimation 2s infinite alternate\"\r\n  }\r\n}))\r\n\r\nexport default NoAccessToFeed\r\n","import React from \"react\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst ListGroupInFeed = props => {\r\n  const { group } = props\r\n  const classes = useStyle()\r\n  return (\r\n    <div className={classes.groupWrapper}>\r\n      <div className={classes.leftAvatarsLine} />\r\n      <div className={classes.listItemWrapper}>\r\n        <ListItem>{RenderMembersAvatar(group)}</ListItem>\r\n      </div>\r\n      <div className={classes.rightAvatarsLine} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RenderMembersAvatar = group => {\r\n  const classes = useStyle()\r\n  return group.members.map((user, i) => (\r\n    <Avatar\r\n      key={\"key\" + i}\r\n      alt={\"Avatar photo\"}\r\n      src={user.photoURL}\r\n      className={classes.avatar}\r\n    />\r\n  ))\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  groupWrapper: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    scrollSnapAlign: \"start\"\r\n  },\r\n  avatar: {\r\n    marginLeft: \"-6px\",\r\n    border: \"2px solid white\"\r\n  },\r\n  listItemWrapper: {\r\n    display: \"flex\"\r\n  },\r\n  leftAvatarsLine: {\r\n    width: \"100%\",\r\n    borderTop: \"1px solid white\",\r\n    marginLeft: \"8px\",\r\n    marginTop: \"35px\",\r\n    height: \"16px\"\r\n  },\r\n  rightAvatarsLine: {\r\n    width: \"100%\",\r\n    borderTop: \"1px solid white\",\r\n    marginRight: \"8px\",\r\n    marginTop: \"35px\",\r\n    height: \"16px\"\r\n  }\r\n}))\r\n\r\nexport default ListGroupInFeed\r\n","import React, { useEffect, useState, Fragment } from \"react\"\r\nimport { getAllPosts } from \"../firebase/dbFunctions\"\r\nimport Post from \"./Post\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport NoAccessToFeed from \"./NoAccessToFeed\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { setAllPosts } from \"../redux/actions\"\r\nimport ListGroupInFeed from \"./ListGroupInFeed\"\r\n\r\nconst Feed = props => {\r\n  const [showFeed, setShowFeed] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [renderImages, setRenderImages] = useState(2)\r\n  const classes = useStyles()\r\n  const user = useSelector(state => state.user)\r\n  const feed = useSelector(state => state.feed)\r\n  const groups = useSelector(state => state.groups)\r\n  const dispatch = useDispatch()\r\n\r\n  const renderNextImages = i => {\r\n    setRenderImages(i + 2)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.gotLatestPost && groups && groups.length) {\r\n      if (props.latestValidPost) {\r\n        setShowFeed(true)\r\n        const groupIds = groups.map(group => group.id)\r\n        getAllPosts(groupIds).then(posts => {\r\n          dispatch(setAllPosts(posts))\r\n        })\r\n      } else {\r\n        setShowFeed(false)\r\n      }\r\n      setIsLoading(false)\r\n    } else {\r\n      setIsLoading(true)\r\n    }\r\n  }, [props.latestValidPost, props.gotLatestPost, dispatch, groups])\r\n\r\n  //Todo this is a quickfix remove updatefeed from pagelayout\r\n  // replace this with redux or something\r\n  useEffect(() => {\r\n    //ugly quickfix since it's 0 first time it won't update\r\n    if (props.updateFeed && groups && groups.length) {\r\n      const groupIds = groups.map(group => group.id)\r\n      getAllPosts(groupIds).then(posts => dispatch(setAllPosts(posts)))\r\n      setShowFeed(true)\r\n    }\r\n  }, [props.updateFeed, user, dispatch, groups])\r\n\r\n  const renderFeed = () => {\r\n    return groups.map((group, i) => renderGroupSection(group, i))\r\n  }\r\n\r\n  const renderGroupSection = (group, i) => {\r\n    return (\r\n      <Fragment key={\"key\" + i}>\r\n        <ListGroupInFeed group={group} />\r\n        {renderPosts(group.id)}\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const renderPosts = groupId => {\r\n    const posts = feed.allPosts.filter(post => post.groupId === groupId)\r\n    return posts.map((post, i) => (\r\n      <Post\r\n        key={\"post\" + i}\r\n        renderNextImages={renderNextImages}\r\n        renderImages={renderImages}\r\n        index={i}\r\n        post={post}\r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.feedWrapper}>\r\n      <div className={classes.feedTopDiv} />\r\n\r\n      {isLoading ? (\r\n        <Typography variant=\"subtitle1\">loading</Typography>\r\n      ) : showFeed ? (\r\n        renderFeed()\r\n      ) : (\r\n        <NoAccessToFeed />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.background.main\r\n  },\r\n  feedTopDiv: {\r\n    scrollSnapAlign: \"end\"\r\n  }\r\n}))\r\n\r\nexport default Feed\r\n","import React from \"react\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\" />\r\n}\r\nconst SentPushNotificationSnackBar = props => {\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n      }}\r\n      autoHideDuration={1300}\r\n      open={props.showSnackBar}\r\n      onClose={props.handleCloseSnackBar}\r\n      TransitionComponent={TransitionLeft}\r\n      ContentProps={{\r\n        \"aria-describedby\": \"message-id\"\r\n      }}\r\n      message={<span id=\"message-id\">{props.snackBarText}</span>}\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClose={props.handleCloseSnackBar}\r\n        >\r\n          <Icon>close</Icon>\r\n        </IconButton>\r\n      ]}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SentPushNotificationSnackBar\r\n","import React, { Fragment } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport { createNewGroup } from \"../firebase/dbFunctions\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst CreateGroupButton = () => {\r\n  const user = useSelector(state => state.user)\r\n  const onPress = () => {\r\n    if (user.authenticated && user.data) {\r\n      createNewGroup(user.data)\r\n    }\r\n  }\r\n\r\n  //Todo remove uid check\r\n  return (\r\n    <Fragment>\r\n      {user.data.uid === \"CtJDRqu7FUf6OReDg8ztcTo1wmv2\" ? (\r\n        <Button color=\"secondary\" onClick={onPress}>\r\n          Create Group <Icon>add</Icon>\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CreateGroupButton\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport { convertTimeStamp } from \"../utils\"\r\nimport { sendPushNotification } from \"../firebase/dbFunctions\"\r\n\r\nconst ListGroups = props => {\r\n  const classes = useStyle()\r\n  const groups = useSelector(state => state.groups)\r\n  const user = useSelector(state => state.user)\r\n  const { allPosts } = useSelector(state => state.feed)\r\n\r\n  const renderGroups = () => {\r\n    return groups ? (\r\n      groups.map((group, i) => groupItem(group, i))\r\n    ) : (\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"inherit\"\r\n        className={classes.loadingText}\r\n      >\r\n        loading groups..\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  const groupItem = (group, i) => {\r\n    return (\r\n      <div key={\"key\" + i} className={classes.groupButtonWrapper}>\r\n        <ListItem>{renderMembersAvatar(group)}</ListItem>\r\n        {user.data.uid === \"CtJDRqu7FUf6OReDg8ztcTo1wmv2\" ? (\r\n          <IconButton onClick={() => onInvitePress(group.id)}>\r\n            <Icon>group_add</Icon>\r\n          </IconButton>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderMembersAvatar = group => {\r\n    return group.members.map((user, i) => (\r\n      <div key={\"avatar\" + i}>\r\n        <Avatar\r\n          onClick={() => onPressSendNotification(user)}\r\n          key={\"key\" + i}\r\n          alt={\"Avatar photo\"}\r\n          src={user.photoURL}\r\n          className={classes.avatar}\r\n        />\r\n        <p className={classes.timer}>{getLastPostDate(user.uid, allPosts)}</p>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  const onInvitePress = groupId => {\r\n    const link = window.location.href + \"?groupId=\" + groupId\r\n    navigator.clipboard.writeText(link).then(\r\n      function() {\r\n        //console.log(\"Async: Copying to clipboard was successful!\", link)\r\n      },\r\n      function(err) {\r\n        console.error(\"Async: Could not copy text: \", err)\r\n      }\r\n    )\r\n  }\r\n\r\n  const onPressSendNotification = user => {\r\n    props.setShowSnackBar(true, \"Notification to \" + user.displayName)\r\n    sendPushNotification(user.uid).then(val => {\r\n      const text = val.data\r\n        ? \"Sent Notification!\"\r\n        : \"Couldn't send notification\"\r\n      props.setShowSnackBar(true, text)\r\n    })\r\n  }\r\n\r\n  return <List>{renderGroups()}</List>\r\n}\r\n\r\nconst getLastPostDate = (uid, allPosts) => {\r\n  if (!uid || !allPosts) return\r\n  const latestPost = allPosts\r\n    .filter(post => post.uid === uid)\r\n    .sort(\r\n      (a, b) => a.timestamp.toDate().getTime() - b.timestamp.toDate().getTime()\r\n    )\r\n  return latestPost[0]\r\n    ? convertTimeStamp(latestPost[latestPost.length - 1].timestamp.toDate())\r\n    : \"😴\"\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  loadingText: {\r\n    marginLeft: \"16px\"\r\n  },\r\n  avatar: {\r\n    marginLeft: \"-6px\",\r\n    border: \"2px solid white\"\r\n  },\r\n  groupButtonWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  timer: {\r\n    margin: 0\r\n  }\r\n}))\r\n\r\nexport default ListGroups\r\n","import React, { useState, Fragment } from \"react\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport SentPushNotificationSnackBar from \"./SentPushNotificationSnackbar\"\r\nimport CreateGroupButton from \"./CreateGroupButton\"\r\nimport ListGroups from \"./ListGroups\"\r\n\r\nconst CustomSideDrawer = props => {\r\n  const { open, toggleDrawer } = props\r\n  const classes = useStyles()\r\n  const [showSnackBar, setShowSnackBar] = useState(false)\r\n  const [snackBarText, setSnackBarText] = useState(\"Push Notification\")\r\n\r\n  const handleCloseSnackBar = () => {\r\n    setShowSnackBar(false)\r\n  }\r\n\r\n  const _setShowSnackBar = (bool, text) => {\r\n    setShowSnackBar(bool)\r\n    setSnackBarText(text)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SentPushNotificationSnackBar\r\n        handleCloseSnackBar={handleCloseSnackBar}\r\n        showSnackBar={showSnackBar}\r\n        snackBarText={snackBarText}\r\n      />\r\n      <SwipeableDrawer\r\n        open={open}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        <div\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onClick={toggleDrawer(false)}\r\n          onKeyDown={toggleDrawer(false)}\r\n          className={classes.drawerList}\r\n        >\r\n          <ListGroups setShowSnackBar={_setShowSnackBar} />\r\n          <CreateGroupButton />\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Beta v.0.1.4\r\n          </Typography>\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawerList: {\r\n    height: \"100%\",\r\n    width: \"250px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: theme.palette.background.main\r\n  }\r\n}))\r\n\r\nexport default CustomSideDrawer\r\n","import React, { createRef, useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport { progressCalc } from \"../utils\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst Camera = props => {\r\n  const { classes } = props\r\n  const inputRef = createRef()\r\n  const [progressValue, setProgressValue] = useState(0)\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false)\r\n  const user = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    if (!props.latestValidPost) {\r\n      setProgressValue(0)\r\n    } else {\r\n      setProgressValue(progressCalc(props.latestValidPost.timestamp.toDate()))\r\n    }\r\n  }, [props.latestValidPost])\r\n\r\n  const handleCameraClick = () => {\r\n    if (!user.authenticated) {\r\n      setOpenSnackbar(true)\r\n    } else {\r\n      inputRef.current.click()\r\n    }\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n    setOpenSnackbar(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span className={classes.hide}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          capture\r\n          onChange={e => props.handleFile(e)}\r\n          ref={inputRef}\r\n        />\r\n      </span>\r\n      <Fab\r\n        aria-label=\"Add\"\r\n        className={classes.fabButton}\r\n        size=\"large\"\r\n        onClick={handleCameraClick}\r\n      >\r\n        <Icon>photo_camera</Icon>\r\n      </Fab>\r\n      <CircularProgress\r\n        size={66}\r\n        variant={props.showUploadLoader ? \"indeterminate\" : \"static\"}\r\n        value={progressValue}\r\n        className={classes.fabProgress}\r\n      />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        message={<span id=\"message-id\">Login to post pictures</span>}\r\n        open={openSnackbar}\r\n        autoHideDuration={10000}\r\n        onClose={handleClose}\r\n        action={\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <Icon>close</Icon>\r\n          </IconButton>\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    top: \"-29px\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\"\r\n  },\r\n  fabProgress: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -34,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    color: theme.palette.color.main\r\n  },\r\n  hide: { display: \"none\" }\r\n})\r\n\r\nexport default withStyles(styles)(Camera)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport firebase from \"../firebase/firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setUser } from \"../redux/actions\"\r\n\r\nconst LoginPage = props => {\r\n  const [triedToAuth, setTriedToAuth] = useState(false)\r\n  const dispatch = useDispatch()\r\n  // Configure FirebaseUI.\r\n  const uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [firebase.auth.FacebookAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const auth = firebase.auth()\r\n    let unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\r\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n      dispatch(setUser(user))\r\n      if (!user) {\r\n        setTriedToAuth(true)\r\n      }\r\n    })\r\n    return () => {\r\n      unregisterAuthObserver()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {triedToAuth ? (\r\n        <StyledFirebaseAuth\r\n          uiConfig={uiConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      ) : (\r\n        <Typography variant=\"subtitle1\" style={{ textAlign: \"center\" }}>\r\n          authenticating\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState, useEffect, Fragment } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport CustomAppBar from \"./CustomAppBar\"\r\nimport CustomBottomAppBar from \"./CustomBottomAppBar\"\r\nimport Feed from \"./Feed\"\r\nimport CustomSideDrawer from \"./CustomSideDrawer\"\r\nimport Camera from \"./Camera\"\r\nimport {\r\n  uploadImage,\r\n  latestTimeValidPost,\r\n  saveFCMToken,\r\n  joinGroup,\r\n  getUserGroups\r\n} from \"../firebase/dbFunctions\"\r\nimport LoginPage from \"./LoginPage\"\r\nimport { compressImage } from \"../utils\"\r\nimport { setGroups } from \"../redux/actions\"\r\n\r\nconst PageLayout = props => {\r\n  const [openSideDrawer, setOpenSideDrawer] = useState(false)\r\n  const [imagePreviewUrl, setimagePreviewUrl] = useState(\"\")\r\n\r\n  const [latestValidPost, setLatestValidPost] = useState()\r\n  const [gotLatestPost, setGotLatestPost] = useState(false)\r\n  const [showUploadLoader, setShowUploadLoader] = useState(false)\r\n  const [updateFeed, setUpdateFeed] = useState(0)\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n  const groups = useSelector(state => state.groups)\r\n\r\n  const toggleDrawer = openSideDrawer => () => {\r\n    setOpenSideDrawer(openSideDrawer)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getLatestValidPost = () => {\r\n      if (!user.authenticated) return\r\n      latestTimeValidPost(user.data.uid).then(post => {\r\n        setLatestValidPost(post)\r\n        setGotLatestPost(true)\r\n      })\r\n    }\r\n    getLatestValidPost()\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    if (user.authenticated && props.FCMToken) {\r\n      saveFCMToken(props.FCMToken, user.data.uid)\r\n    }\r\n  }, [user, props.FCMToken]) //Todo FCMToken in redux\r\n\r\n  useEffect(() => {\r\n    const url = new URL(window.location.href)\r\n    const groupId = url.searchParams.get(\"groupId\")\r\n\r\n    if (groupId && user.authenticated) {\r\n      window.history.pushState({}, \"\", \"/\")\r\n      joinGroup(groupId, user.data)\r\n    }\r\n  }, [user, user.authenticated])\r\n\r\n  useEffect(() => {\r\n    if (user.authenticated && user.data) {\r\n      getUserGroups(user.data.uid).then(groups => {\r\n        dispatch(setGroups(groups))\r\n      })\r\n    }\r\n  }, [user, dispatch])\r\n\r\n  const handleFile = event => {\r\n    var file = event.target.files[0]\r\n    if (!file && user.authenticated) return\r\n    setShowUploadLoader(true)\r\n    const groupIds = extractGroupId(groups)\r\n    compressImage(file, file => {\r\n      setimagePreviewUrl(URL.createObjectURL(file))\r\n      uploadImage(file, user.data, groupIds, uploadImageCallback)\r\n    })\r\n  }\r\n  const extractGroupId = groups => {\r\n    return groups.map(group => group.id)\r\n  }\r\n\r\n  const uploadImageCallback = () => {\r\n    setShowUploadLoader(false)\r\n    setUpdateFeed(updateFeed + 1)\r\n    latestTimeValidPost(user.data.uid).then(post => {\r\n      setLatestValidPost(post)\r\n      setGotLatestPost(true)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <CustomAppBar />\r\n\r\n      {user.authenticated ? (\r\n        <Fragment>\r\n          <CustomSideDrawer open={openSideDrawer} toggleDrawer={toggleDrawer} />\r\n          <Feed\r\n            imagePreviewUrl={imagePreviewUrl}\r\n            latestValidPost={latestValidPost}\r\n            gotLatestPost={gotLatestPost}\r\n            updateFeed={updateFeed}\r\n          />\r\n        </Fragment>\r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n      <CustomBottomAppBar\r\n        toggleDrawer={toggleDrawer}\r\n        camera={\r\n          <Camera\r\n            showUploadLoader={showUploadLoader}\r\n            handleFile={handleFile}\r\n            latestValidPost={latestValidPost}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  App: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    maxWidth: \"800px\",\r\n    width: \"100%\"\r\n  }\r\n}))\r\n\r\nexport default PageLayout\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\n\r\nconst UpdateSnackbar = props => {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={props.showUpdateSnackBar}\r\n        onClose={props.handleCloseSnackBar}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">New Update! Restart the app</span>}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateSnackbar\r\n","import { SET_GROUPS } from \"../actionTypes\"\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_GROUPS: {\r\n      const { groups } = action.payload\r\n      return groups\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_USER, LOGOUT } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  data: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER: {\r\n      const { user } = action.payload\r\n      return {\r\n        ...state,\r\n        authenticated: !!user,\r\n        data: user\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        authenticated: false,\r\n        data: {}\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_POSTS } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n  allPosts: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POSTS: {\r\n      const { allPosts } = action.payload\r\n      return {\r\n        ...state,\r\n        allPosts\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport groups from \"./groups\"\r\nimport user from \"./user\"\r\nimport feed from \"./feed\"\r\n\r\nexport default combineReducers({ user, groups, feed })\r\n","import { createStore } from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nexport default createStore(rootReducer)\r\n","import React, { Component } from \"react\"\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport PageLayout from \"./components/PageLayout\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport UpdateSnackbar from \"./components/UpdateSnackbar\"\r\nimport { initializePush } from \"./pushNotifications\"\r\nimport firebase from \"firebase\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./redux/store\"\r\n\r\nconst messaging = firebase.messaging()\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    background: { main: \"#000000\" },\r\n    primary: { main: \"#000000\" },\r\n    secondary: { main: \"#ffffff\" },\r\n    color: { main: \"#FF2188\" },\r\n    gray: { main: \"#666666\" }\r\n  },\r\n  typography: { useNextVariants: true }\r\n})\r\n\r\n//todo make into a funcion with hooks\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      showUpdateSnackBar: false,\r\n      FCMToken: \"\"\r\n    }\r\n\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker\r\n        .register(\"./fbsw/firebase-messaging-sw.js\")\r\n        .then(registration => {\r\n          messaging.useServiceWorker(registration)\r\n          initializePush(messaging)\r\n            .then(token => {\r\n              this.setState({ FCMToken: token })\r\n            })\r\n            .catch(error => {\r\n              if (error.code === \"messaging/permission-blocked\") {\r\n                console.log(\"Please Unblock Notification Request Manually\")\r\n              } else {\r\n                console.log(\"Error Occurred\", error)\r\n              }\r\n            })\r\n        })\r\n        .catch(function(err) {\r\n          console.log(\"Service worker registration failed, error:\", err)\r\n        })\r\n    }\r\n\r\n    serviceWorker.register({\r\n      onUpdate: this.handleServiceWorkerUpdate\r\n    })\r\n  }\r\n\r\n  handleServiceWorkerUpdate = registration => {\r\n    this.setState({ showUpdateSnackBar: true })\r\n  }\r\n\r\n  handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    this.setState({ showUpdateSnackBar: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Provider store={store}>\r\n          <PageLayout FCMToken={this.state.FCMToken} />\r\n        </Provider>\r\n        <UpdateSnackbar\r\n          handleCloseSnackBar={this.handleCloseSnackBar}\r\n          showUpdateSnackBar={this.state.showUpdateSnackBar}\r\n        />\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","export function initializePush(messaging) {\r\n  return messaging.requestPermission().then(() => {\r\n    return messaging.getToken()\r\n  })\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}