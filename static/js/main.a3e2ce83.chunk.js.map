{"version":3,"sources":["AuthContext.js","firebase/superSecretConfigFile.js","firebase/firebase.js","components/CustomAppBar.js","components/CustomBottomAppBar.js","firebase/dbFunctions.js","utils.js","components/FeedImage.js","components/Feed.js","components/CustomSideDrawer.js","components/Camera.js","components/LoginPage.js","components/PageLayout.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","authenticated","user","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseConfig","databaseUrl","mesagingSenderId","firebase","initializeApp","db","firestore","withStyles","root","grow","flexGrow","avatar","margin","padding","height","width","props","classes","_React$useState","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","open","Boolean","context","useContext","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","variant","color","IconButton","onClick","event","currentTarget","Avatar","alt","src","photoURL","Icon","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","auth","signOut","setAuthContext","theme","appBar","top","bottom","toolbar","alignItems","justifyContent","aria-label","toggleDrawer","camera","uploadImage","file","uid","imagePath","Date","now","name","substr","lastIndexOf","changeImageName","storage","ref","put","on","snapshot","percentage","bytesTransferred","totalBytes","console","log","err","saveImageRef","collection","add","imgRef","text","timestamp","FieldValue","serverTimestamp","then","docRef","catch","error","FeedImage","_useState","_useState2","imageUrl","setImageUrl","useEffect","getImageUrl","imageRef","path","getDownloadURL","url","getImageUrlOnRef","lib_default","styles","Feed","allPosts","setAllPosts","getAllFeedImages","orderBy","limit","get","querySnapshot","posts","forEach","doc","push","data","imagePreviewUrl","map","post","i","components_FeedImage","key","useStyles","makeStyles","drawerList","CustomSideDrawer","SwipeableDrawer","onOpen","tabIndex","role","onKeyDown","fabButton","zIndex","left","right","hide","display","inputRef","createRef","type","accept","capture","onChange","e","handleFile","Fab","current","click","LoginPage","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","StyledFirebaseAuth_default","firebaseAuth","App","flexDirection","PageLayout","openSideDrawer","setOpenSideDrawer","_useState3","_useState4","setimagePreviewUrl","_useState5","_useState6","authContext","setterAuthContext","Provider","value","components_CustomAppBar","components_CustomSideDrawer","components_Feed","components_LoginPage","CustomBottomAppBar","components_Camera","target","files","callback","Compressor","quality","success","result","message","compressImage","URL","createObjectURL","createMuiTheme","palette","primary","main","light","dark","secondary","typography","useNextVariants","MuiThemeProvider","CssBaseline","components_PageLayout","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3e2ce83.chunk.js","sourcesContent":["import React from \"react\"\r\nexport const AuthContext = React.createContext({\r\n  authenticated: false,\r\n  user: {}\r\n})\r\n","export const config = {\r\n  apiKey: \"AIzaSyCNrWqbvDNEp53wNfDtDMqfZbgStsJEM-E\",\r\n  authDomain: \"paiweb.firebaseapp.com\",\r\n  databaseURL: \"https://paiweb.firebaseio.com\",\r\n  projectId: \"paiweb\",\r\n  storageBucket: \"paiweb.appspot.com\",\r\n  messagingSenderId: \"560094021764\",\r\n  appId: \"1:560094021764:web:d9efaf85f4747eb1\"\r\n}\r\n","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/storage\"\r\nimport { config } from \"./superSecretConfigFile\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: config.apiKey,\r\n  authDomain: config.authDomain,\r\n  databaseURL: config.databaseUrl,\r\n  projectId: config.projectId,\r\n  storageBucket: config.storageBucket,\r\n  messagingSenderId: config.mesagingSenderId,\r\n  appId: config.appId\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase\r\nexport const db = firebase.firestore()\r\n","import React, { useContext } from \"react\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Menu from \"@material-ui/core/Menu\"\r\nimport { AuthContext } from \"../AuthContext\"\r\nimport firebase from \"../firebase/firebase\"\r\n\r\nconst CustomAppBar = props => {\r\n  const { classes } = props\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const context = useContext(AuthContext)\r\n\r\n  function handleMenu(event) {\r\n    context.authenticated && setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n  function handleSignOut() {\r\n    setAnchorEl(null)\r\n    firebase.auth().signOut()\r\n    props.setAuthContext({})\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Pai\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={handleMenu}>\r\n            {context.authenticated ? (\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src={context.user.photoURL}\r\n                className={classes.avatar}\r\n              />\r\n            ) : (\r\n              <Icon>account_circle</Icon>\r\n            )}\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleSignOut}>Sign out</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  root: {},\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  avatar: {\r\n    margin: 0,\r\n    padding: 0,\r\n    height: \"24px\",\r\n    width: \"24px\"\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CustomAppBar)\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst BottomAppBar = props => {\r\n  const { classes } = props\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={props.toggleDrawer(true)}\r\n        >\r\n          <Icon>menu</Icon>\r\n        </IconButton>\r\n        {props.camera}\r\n        <div>\r\n          <IconButton color=\"inherit\">\r\n            <Icon>more_vert</Icon>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  toolbar: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  }\r\n})\r\n\r\nexport default withStyles(styles)(BottomAppBar)\r\n","import firebase, { db } from \"./firebase.js\"\r\nimport { changeImageName } from \"../utils\"\r\n\r\nexport const uploadImage = (file, uid) => {\r\n  const imagePath = \"images/\" + uid + \"/\" + changeImageName(file)\r\n  var storageRef = firebase.storage().ref(imagePath)\r\n  var task = storageRef.put(file)\r\n  task.on(\r\n    \"state_changed\",\r\n    function progress(snapshot) {\r\n      var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      console.log(\"percentage\", percentage)\r\n    },\r\n    function error(err) {\r\n      \"ERROR!\"\r\n    },\r\n    function complete() {\r\n      console.log(\"DONE!\")\r\n      saveImageRef(imagePath, uid)\r\n    }\r\n  )\r\n}\r\n\r\nconst saveImageRef = (ref, uid) => {\r\n  db.collection(\"posts\")\r\n    .add({\r\n      uid: uid,\r\n      imgRef: ref,\r\n      text: \"\",\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n    .then(function(docRef) {\r\n      console.log(\"Document written with docRef: \", docRef)\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error adding document: \", error)\r\n    })\r\n}\r\n\r\nexport const getAllPosts = () => {\r\n  return db\r\n    .collection(\"posts\")\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .limit(3)\r\n    .get()\r\n    .then(querySnapshot => {\r\n      let posts = []\r\n      querySnapshot.forEach(doc => {\r\n        posts.push(doc.data())\r\n      })\r\n      return posts\r\n    })\r\n}\r\n\r\nexport const getImageUrlOnRef = path => {\r\n  if (!path) return\r\n  var storageRef = firebase.storage().ref(path)\r\n  return storageRef.getDownloadURL().then(url => url)\r\n}\r\n","import Compressor from \"compressorjs\"\r\n\r\nexport const changeImageName = file => {\r\n  return Date.now() + file.name.substr(file.name.lastIndexOf(\".\"))\r\n}\r\n\r\nexport const compressImage = (file, callback) => {\r\n  if (!file) {\r\n    return\r\n  }\r\n\r\n  new Compressor(file, {\r\n    quality: 0.6,\r\n    success(result) {\r\n      callback(result)\r\n    },\r\n    error(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ExifOrientationImg from \"react-exif-orientation-img\"\r\nimport { getImageUrlOnRef } from \"../firebase/dbFunctions.js\"\r\n\r\nconst FeedImage = props => {\r\n  const [imageUrl, setImageUrl] = useState(\"\")\r\n  useEffect(() => getImageUrl(props.imageRef), [props.imageRef])\r\n\r\n  const getImageUrl = imageRef => {\r\n    getImageUrlOnRef(imageRef).then(url => setImageUrl(url))\r\n  }\r\n\r\n  return (\r\n    <ExifOrientationImg\r\n      styles={\"image-orientation: from-image\"}\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      src={imageUrl}\r\n      alt=\"image post\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default FeedImage\r\n","import React, { useEffect, useState } from \"react\"\r\nimport ExifOrientationImg from \"react-exif-orientation-img\"\r\nimport { getAllPosts } from \"../firebase/dbFunctions\"\r\nimport FeedImage from \"./FeedImage\"\r\n\r\nconst Feed = props => {\r\n  const [allPosts, setAllPosts] = useState([])\r\n\r\n  const getAllFeedImages = () => {\r\n    getAllPosts().then(posts => setAllPosts(posts))\r\n  }\r\n\r\n  useEffect(() => getAllFeedImages(), [])\r\n\r\n  const renderImages = () => {\r\n    return allPosts.map((post, i) => (\r\n      <FeedImage key={\"FeedImage\" + i} imageRef={post.imgRef} />\r\n    ))\r\n  }\r\n  return (\r\n    <div>\r\n      <ExifOrientationImg\r\n        styles={\"image-orientation: from-image\"}\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        src={props.imagePreviewUrl}\r\n        alt=\"preview\"\r\n      />\r\n      {renderImages()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Feed\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\"\r\n\r\nconst CustomSideDrawer = props => {\r\n  const { open, toggleDrawer } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <SwipeableDrawer\r\n      open={open}\r\n      onClose={toggleDrawer(false)}\r\n      onOpen={toggleDrawer(true)}\r\n    >\r\n      <div\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <div className={classes.drawerList}>SideDrawer</div>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  drawerList: {\r\n    width: \"250px\"\r\n  }\r\n})\r\n\r\nexport default CustomSideDrawer\r\n","import React, { createRef } from \"react\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst Camera = props => {\r\n  const { classes } = props\r\n  const inputRef = createRef()\r\n\r\n  return (\r\n    <div>\r\n      <span className={classes.hide}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          capture\r\n          onChange={e => props.handleFile(e)}\r\n          ref={inputRef}\r\n        />\r\n      </span>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"Add\"\r\n        className={classes.fabButton}\r\n        onClick={() => inputRef.current.click()}\r\n      >\r\n        <Icon>photo_camera</Icon>\r\n      </Fab>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\"\r\n  },\r\n  hide: { display: \"none\" }\r\n})\r\n\r\nexport default withStyles(styles)(Camera)\r\n","import React, { useEffect } from \"react\"\r\nimport firebase from \"../firebase/firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n\r\nconst LoginPage = props => {\r\n  // Configure FirebaseUI.\r\n  const uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\r\n      props.setAuthContext({ authenticated: !!user, user: user })\r\n    })\r\n    return () => {\r\n      unregisterAuthObserver()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport CustomAppBar from \"./CustomAppBar\"\r\nimport CustomBottomAppBar from \"./CustomBottomAppBar\"\r\nimport Feed from \"./Feed\"\r\nimport CustomSideDrawer from \"./CustomSideDrawer\"\r\nimport Camera from \"./Camera\"\r\nimport { uploadImage } from \"../firebase/dbFunctions\"\r\nimport LoginPage from \"./LoginPage\"\r\nimport { AuthContext } from \"../AuthContext\"\r\nimport { compressImage } from \"../utils\"\r\n\r\nconst PageLayout = props => {\r\n  const [openSideDrawer, setOpenSideDrawer] = useState(false)\r\n  const [imagePreviewUrl, setimagePreviewUrl] = useState(\"\")\r\n  const [authContext, setAuthContext] = useState({})\r\n\r\n  const classes = useStyles()\r\n\r\n  const setterAuthContext = authContext => {\r\n    setAuthContext(authContext)\r\n  }\r\n  const toggleDrawer = openSideDrawer => () => {\r\n    setOpenSideDrawer(openSideDrawer)\r\n  }\r\n\r\n  const handleFile = event => {\r\n    var file = event.target.files[0]\r\n    if (!file && authContext.authenticated) return\r\n    compressImage(file, file => {\r\n      setimagePreviewUrl(URL.createObjectURL(file))\r\n      uploadImage(file, authContext.user.uid)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <AuthContext.Provider value={authContext}>\r\n        <CustomAppBar setAuthContext={setterAuthContext} />\r\n        <CustomSideDrawer open={openSideDrawer} toggleDrawer={toggleDrawer} />\r\n        {authContext.authenticated ? (\r\n          <Feed imagePreviewUrl={imagePreviewUrl} />\r\n        ) : (\r\n          <LoginPage setAuthContext={setterAuthContext} />\r\n        )}\r\n        <CustomBottomAppBar\r\n          toggleDrawer={toggleDrawer}\r\n          camera={<Camera handleFile={handleFile} />}\r\n        />\r\n      </AuthContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  App: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n}))\r\n\r\nexport default PageLayout\r\n","import React from \"react\"\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport PageLayout from \"./components/PageLayout\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#ec407a\", light: \"#ff77a9\", dark: \"#b4004e\" },\n    secondary: { main: \"#42a5f5\", light: \"#80d6ff\", dark: \"#0077c2\" }\n  },\n  typography: { useNextVariants: true }\n})\n\nfunction App(props) {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <PageLayout />\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}