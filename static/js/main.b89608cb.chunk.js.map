{"version":3,"sources":["components/CustomAppBar.js","components/CustomBottomAppBar.js","components/Feed.js","components/CustomSideDrawer.js","components/Camera.js","components/PageLayout.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","grow","flexGrow","menuButton","marginLeft","marginRight","list","width","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Typography_default","variant","color","IconButton_default","Icon_default","theme","appBar","top","bottom","toolbar","alignItems","justifyContent","aria-label","onClick","toggleDrawer","camera","Feed","lib_default","styles","height","src","imagePreviewUrl","alt","CustomSideDrawer","open","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","fabButton","zIndex","left","right","margin","hide","display","inputRef","createRef","type","accept","capture","onChange","e","handleFile","ref","Fab_default","current","click","PageLayout","_useState","useState","_useState2","Object","slicedToArray","openSideDrawer","setOpenSideDrawer","_useState3","_useState4","setimagePreviewUrl","components_CustomAppBar","components_CustomSideDrawer","components_Feed","CustomBottomAppBar","components_Camera","event","target","files","URL","createObjectURL","createMuiTheme","palette","primary","main","light","dark","secondary","typography","useNextVariants","App","components_PageLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b89608cb.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst CustomAppBar = props => {\r\n  const { classes } = props\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Pai\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Icon>account_circle</Icon>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  root: {},\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  list: {\r\n    width: 250\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CustomAppBar)\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst BottomAppBar = props => {\r\n  const { classes } = props\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={props.toggleDrawer(true)}\r\n        >\r\n          <Icon>menu</Icon>\r\n        </IconButton>\r\n        {props.camera}\r\n        <div>\r\n          <IconButton color=\"inherit\">\r\n            <Icon>more_vert</Icon>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  toolbar: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  }\r\n})\r\n\r\nexport default withStyles(styles)(BottomAppBar)\r\n","import React from \"react\"\r\nimport ExifOrientationImg from \"react-exif-orientation-img\"\r\n\r\nconst Feed = props => {\r\n  return (\r\n    <div>\r\n      <ExifOrientationImg\r\n        styles={\"image-orientation: from-image\"}\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        src={props.imagePreviewUrl}\r\n        alt=\"preview\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Feed\r\n","import React from \"react\"\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\"\r\n\r\nconst CustomSideDrawer = props => {\r\n  const { open, toggleDrawer } = props\r\n  return (\r\n    <SwipeableDrawer\r\n      open={open}\r\n      onClose={toggleDrawer(false)}\r\n      onOpen={toggleDrawer(true)}\r\n    >\r\n      <div\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <div className=\"drawerList\">SideDrawer</div>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  )\r\n}\r\n\r\nexport default CustomSideDrawer\r\n","import React, { createRef } from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst Camera = props => {\r\n  const { classes } = props\r\n  const inputRef = createRef()\r\n\r\n  return (\r\n    <div>\r\n      <span className={classes.hide}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          capture\r\n          onChange={e => props.handleFile(e)}\r\n          ref={inputRef}\r\n        />\r\n      </span>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"Add\"\r\n        className={classes.fabButton}\r\n        onClick={() => inputRef.current.click()}\r\n      >\r\n        <Icon>photo_camera</Icon>\r\n      </Fab>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\"\r\n  },\r\n  hide: { display: \"none\" }\r\n})\r\n\r\nexport default withStyles(styles)(Camera)\r\n","import React, { useState } from \"react\"\r\nimport CustomAppBar from \"./CustomAppBar\"\r\nimport CustomBottomAppBar from \"./CustomBottomAppBar\"\r\nimport Feed from \"./Feed\"\r\nimport CustomSideDrawer from \"./CustomSideDrawer\"\r\nimport Camera from \"./Camera\"\r\n\r\nconst PageLayout = props => {\r\n  const [openSideDrawer, setOpenSideDrawer] = useState(false)\r\n  const [imagePreviewUrl, setimagePreviewUrl] = useState(\"\")\r\n\r\n  const toggleDrawer = openSideDrawer => () => {\r\n    setOpenSideDrawer(openSideDrawer)\r\n  }\r\n\r\n  const handleFile = event => {\r\n    if (!event.target.files[0]) return\r\n    setimagePreviewUrl(URL.createObjectURL(event.target.files[0]))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CustomAppBar />\r\n      <CustomSideDrawer open={openSideDrawer} toggleDrawer={toggleDrawer} />\r\n      <Feed imagePreviewUrl={imagePreviewUrl} />\r\n      <CustomBottomAppBar\r\n        toggleDrawer={toggleDrawer}\r\n        camera={<Camera handleFile={handleFile} />}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageLayout\r\n","import React from \"react\"\nimport \"./App.css\"\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"\nimport PageLayout from \"./components/PageLayout\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#ec407a\", light: \"#ff77a9\", dark: \"#b4004e\" },\n    secondary: { main: \"#42a5f5\", light: \"#80d6ff\", dark: \"#0077c2\" }\n  },\n  typography: { useNextVariants: true }\n})\n\nfunction App(props) {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <PageLayout />\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}